{"version":3,"sources":["../node_modules/typescript/lib sync","service/DateHolder.js","components/api-authorization/ApiAuthorizationConstants.js","components/api-authorization/AuthorizeService.js","components/api-authorization/LoginMenu.js","components/NavMenu.js","components/Home.js","components/Layout.js","components/FetchData.js","components/Counter.js","Pages/SettingPage.js","service/Models.js","service/PersonService.js","Pages/QuickNewPersonForm.js","Pages/IssueAssignment/SelectPerson.js","components/DynamicForm.js","service/AnimalFoodService.js","Pages/AnimalFoodPage.js","components/GlobalCss.js","Pages/InventoryStatus/InventoryStatus.js","Pages/IssueAssignment/SelectAnimalFood.js","Pages/BaseComponent.js","service/GlobalSiteSettingService.js","service/IssueAssignmentService.js","Pages/IssueAssignment/Assignment.js","Pages/IssueAssignment/PrintAssignment.js","Pages/WarehouseInventory.js","Pages/IssueAssignment/IssueAssignment.js","Pages/InventoryIn/InventoryIn.js","service/AnimalFoodBuyService.js","Pages/BuyAnimalFood/BuyAnimalFood.js","Pages/paging.js","Pages/IssueAssignmentList.js","Pages/BuyAnimalFoodList.js","Pages/pupuHiComponent.js","Pages/printIssueAssignment.js","components/api-authorization/Login.js","components/api-authorization/Logout.js","components/api-authorization/ApiAuthorizationRoutes.js","components/api-authorization/AuthorizeRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","DataHolder","selectedAnimalFood","selectedPerson","selectedIssueAssignment","QueryParameterNames","LogoutActions","LoginActions","prefix","ApplicationPaths","DefaultLoginRedirectPath","ApiAuthorizationClientConfigurationUrl","ApiAuthorizationPrefix","Login","LoginFailed","LoginCallback","Register","Profile","LogOut","LoggedOut","LogOutCallback","IdentityRegisterPath","IdentityManagePath","authService","_callbacks","_nextSubscriptionId","_user","_isAuthenticated","_popUpDisabled","this","getUser","user","profile","ensureUserManagerInitialized","userManager","access_token","state","signinSilent","createArguments","silentUser","updateState","success","console","log","signinPopup","popUpUser","message","error","signinRedirect","redirect","url","signinCallback","signoutPopup","undefined","signoutRedirect","signoutCallback","response","data","notifySubscribers","callback","push","subscription","subscriptionId","subscriptionIndex","map","element","index","found","filter","length","splice","i","useReplaceToNavigate","status","AuthenticationResultStatus","Fail","Success","Redirect","fetch","ok","json","settings","automaticSilentRenew","includeIdTokenInSilentRenew","userStore","WebStorageStateStore","UserManager","events","addUserSignedOut","a","removeUser","LoginMenu","props","isAuthenticated","userName","_subscription","subscribe","populateState","unsubscribe","Promise","all","setState","name","profilePath","logoutPath","pathname","local","authenticatedView","registerPath","loginPath","anonymousView","tag","Link","className","to","Component","NavMenu","toggleNavbar","bind","collapsed","light","onClick","isOpen","navbar","data-testid","href","target","displayName","Home","MyNavMenu","style","paddingTop","paddingBottom","render","history","type","direction","float","Layout","children","marginTop","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","aria-labelledby","forecast","key","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","SettingPage","MyGlobal","numberWithCommas","x","parts","toString","split","replace","join","PersonService","searchTerm","getAllDebug","getAllReal","reject","array","Name","Id","Status","EntityList","then","form","requestOptions","method","headers","body","JSON","stringify","QuickNewPersonForm","person","MilliCode","miliCodeIsValid","handleChange","event","valName","value","rdm","Math","random","class","for","placeholder","onChange","required","showValidInvalidMsg","Mobile","saveCallback","SelectPerson","persons","refreshPersons","vl","getAll","res","alert","Message","catch","aria-label","size","minLength","maxLength","renderNewPersonForm","renderExistPersonProposal","p","save","_persons","reverse","val","arr","Route","parent","step","PersonId","isValid","err","DynamicForm","resetButtonId","document","getElementById","click","isMoney","field","parseInt","validation","setParent","setParentName","config","margin","formClass","renderFields","buttonCallback","buttonId","buttonClass","buttonName","propertyName","optionList","id_prop","title_p","title","onchangeCallback","disabled","getFieldClass","selected","cls","fields","col","max","accept","files","reader","FileReader","readAsDataURL","onloadend","evt","readyState","DONE","result","readFileToByteArr","bytearr","showImg","sfds","src","width","height","onchange","renderSelect","options","AnimalFoodService","PerUnitPrice","Remain","AnimalFoodPage","animalFoodService","childDynamicFormComponentReference","getState","editing","resetForm","readAllFoods","animalFoods","getConfig","scope","showRows","PerCustomerTotalMalQouta","edit","globalStylesheet","center","textAlign","InventoryStatus","readAllAnimalFoods","animalfoods","display","renderAnimalFoods","renderOneAnimalFood","animalFood","Image","color","errMsg","SelectAnimalFood","foods","readAllAnimalFood","AnimalFoodId","showAnimalFoods","BaseComponent","temp","Single","find","el","GlobalSiteSettingService","Unit","IssueAssignmentService","foodId","personId","animalFoodId","page","Assignment","loadAllAnimalFoods","s","loadAllPersonnel","s2","loadExactKg","getAnimalFoodAndPersonQuota","serverResponseEntityListCallback","PerUnitPriceMoney","td","dynamicForm","Quan","TotalPrice","nameField","valueField","updateFormAfterQuan","serverResponseSingleCallback","Kg","formState","totalValue","TotalPriceMoney","PrintAssignment","WarehouseInventory","IssueAssignment","InventoryIn","updateTotalPrice","BankFish","BankFishIsValid","Description","DescriptionIsValid","AnimalFoodBuyService","lastTake","skip","lastSize","getAllRealByanimalFoodId","BuyAnimalFood","f","quan","totalPrice","bdn","DateTime","Date","re","updatePrices","pagingComponent","total","lastSkip","funcName","partCount","IssueAssignmentList","args","list","LastTake","LastSkip","readAndSet","take","readAllIssueAssignments","Total","getAllByAnimalFoodId","dir","AnimalFood","Person","NamVaNameKhanevadegi","colSpan","BuyAnimalFoodList","readAnimalFoodList","Fish","DateTimeIR","persianNToText","require","PrintIssueAssignment","context","stylePath","setTimeout","window","print","paddingRight","paddingLeft","renderPrintSingle","rel","getText","action","login","getReturnUrl","processLoginCallback","URLSearchParams","location","search","get","redirectToProfile","redirectToRegister","returnUrl","signIn","navigateToReturnUrl","completeSignIn","fromQuery","startsWith","origin","redirectToApiAuthorizationPath","encodeURI","apiAuthorizationPath","redirectUrl","Logout","isReady","authenticated","logout","processLogoutCallback","populateAuthenticationState","signOut","completeSignOut","ApiAuthorizationRoutes","path","loginAction","logoutAction","AuthorizeRoute","ready","authenticationChanged","link","createElement","protocol","host","hash","component","rest","App","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","baseUrl","getElementsByTagName","getAttribute","rootElement","ReactDOM","BrowserRouter","basename","URL","process","addEventListener","indexOf","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"wFAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,wWCNZC,G,MAAW,CAEpBC,mBAAmB,GACnBC,eAAe,GACfC,wBAAwB,K,uCCJfC,EACA,YADAA,EAEF,UAGEC,EACK,kBADLA,EAEH,SAFGA,EAGA,aAGAC,EACJ,QADIA,EAEI,iBAFJA,EAGE,eAHFA,EAIF,UAJEA,EAKD,WAGNC,EAAS,kBAEFC,EAAmB,CAC9BC,yBAA0B,IAC1BC,uCAAuC,mBAAD,OAzBT,mBA0B7BC,uBAAwBJ,EACxBK,MAAM,GAAD,OAAKL,EAAL,YAAeD,GACpBO,YAAY,GAAD,OAAKN,EAAL,YAAeD,GAC1BQ,cAAc,GAAD,OAAKP,EAAL,YAAeD,GAC5BS,SAAS,GAAD,OAAKR,EAAL,YAAeD,GACvBU,QAAQ,GAAD,OAAKT,EAAL,YAAeD,GACtBW,OAAO,GAAD,OAAKV,EAAL,YAAeF,GACrBa,UAAU,GAAD,OAAKX,EAAL,YAAeF,GACxBc,eAAe,GAAD,OAAKZ,EAAL,YAAeF,GAC7Be,qBAAsB,6BACtBC,mBAAoB,4BCwKhBC,EAAc,IAzMpB,iDACIC,WAAa,GADjB,KAEIC,oBAAsB,EAF1B,KAGIC,MAAQ,KAHZ,KAIIC,kBAAmB,EAJvB,KAQIC,gBAAiB,EARrB,8LAW2BC,KAAKC,UAXhC,cAWcC,EAXd,2BAYiBA,GAZjB,0PAgBYF,KAAKH,QAASG,KAAKH,MAAMM,QAhBrC,yCAiBmBH,KAAKH,MAAMM,SAjB9B,uBAoBcH,KAAKI,+BApBnB,uBAqB2BJ,KAAKK,YAAYJ,UArB5C,cAqBcC,EArBd,yBAsBeA,GAAQA,EAAKC,SAtB5B,6QA0BcH,KAAKI,+BA1BnB,uBA2B2BJ,KAAKK,YAAYJ,UA3B5C,cA2BcC,EA3Bd,yBA4BeA,GAAQA,EAAKI,cA5B5B,4KAuCiBC,GAvCjB,yFAwCcP,KAAKI,+BAxCnB,gCA0CqCJ,KAAKK,YAAYG,aAAaR,KAAKS,mBA1CxE,cA0CkBC,EA1ClB,OA2CYV,KAAKW,YAAYD,GA3C7B,kBA4CmBV,KAAKY,QAAQL,IA5ChC,qCA+CYM,QAAQC,IAAI,gCAAZ,MA/CZ,WAkDoBd,KAAKD,eAlDzB,uBAmD0B,IAAIlC,MAAM,uGAnDpC,yBAsDwCmC,KAAKK,YAAYU,YAAYf,KAAKS,mBAtD1E,eAsDsBO,EAtDtB,OAuDgBhB,KAAKW,YAAYK,GAvDjC,kBAwDuBhB,KAAKY,QAAQL,IAxDpC,sCA0D2C,wBAAvB,KAAWU,QA1D/B,0CA4D2BjB,KAAKkB,MAAM,gCA5DtC,QA6D4BlB,KAAKD,gBACbc,QAAQC,IAAI,+BAAZ,MA9DpB,mCAmE0Bd,KAAKK,YAAYc,eAAenB,KAAKS,gBAAgBF,IAnE/E,iCAoE2BP,KAAKoB,YApEhC,0CAsEoBP,QAAQC,IAAI,kCAAZ,MAtEpB,kBAuE2Bd,KAAKkB,MAAL,OAvE3B,+MA6EyBG,GA7EzB,gGA+EkBrB,KAAKI,+BA/EvB,uBAgF+BJ,KAAKK,YAAYiB,eAAeD,GAhF/D,cAgFkBnB,EAhFlB,OAiFYF,KAAKW,YAAYT,GAjF7B,kBAkFmBF,KAAKY,QAAQV,GAAQA,EAAKK,QAlF7C,yCAoFYM,QAAQC,IAAI,kCAAZ,MApFZ,kBAqFmBd,KAAKkB,MAAM,mCArF9B,wLA8FkBX,GA9FlB,iFA+FcP,KAAKI,+BA/FnB,oBAiGgBJ,KAAKD,eAjGrB,sBAkGsB,IAAIlC,MAAM,uGAlGhC,uBAqGkBmC,KAAKK,YAAYkB,aAAavB,KAAKS,mBArGrD,cAsGYT,KAAKW,iBAAYa,GAtG7B,kBAuGmBxB,KAAKY,QAAQL,IAvGhC,yCAyGYM,QAAQC,IAAI,wBAAZ,MAzGZ,oBA2GsBd,KAAKK,YAAYoB,gBAAgBzB,KAAKS,gBAAgBF,IA3G5E,iCA4GuBP,KAAKoB,YA5G5B,0CA8GgBP,QAAQC,IAAI,2BAAZ,MA9GhB,kBA+GuBd,KAAKkB,MAAL,OA/GvB,wMAoH0BG,GApH1B,uFAqHcrB,KAAKI,+BArHnB,gCAuHmCJ,KAAKK,YAAYqB,gBAAgBL,GAvHpE,cAuHkBM,EAvHlB,OAwHY3B,KAAKW,YAAY,MAxH7B,kBAyHmBX,KAAKY,QAAQe,GAAYA,EAASC,OAzHrD,yCA2HYf,QAAQC,IAAR,4DA3HZ,kBA4HmBd,KAAKkB,MAAL,OA5HnB,mJAgIgBhB,GACRF,KAAKH,MAAQK,EACbF,KAAKF,mBAAqBE,KAAKH,MAC/BG,KAAK6B,sBAnIb,gCAsIcC,GAEN,OADA9B,KAAKL,WAAWoC,KAAK,CAAED,WAAUE,aAAchC,KAAKJ,wBAC7CI,KAAKJ,oBAAsB,IAxI1C,kCA2IgBqC,GACR,IAAMC,EAAoBlC,KAAKL,WAC1BwC,KAAI,SAACC,EAASC,GAAV,OAAoBD,EAAQJ,eAAiBC,EAAiB,CAAEK,OAAO,EAAMD,SAAU,CAAEC,OAAO,MACpGC,QAAO,SAAAH,GAAO,OAAsB,IAAlBA,EAAQE,SAC/B,GAAiC,IAA7BJ,EAAkBM,OAClB,MAAM,IAAI3E,MAAJ,mDAAsDqE,EAAkBM,SAGlFxC,KAAKL,WAAW8C,OAAOP,EAAkB,GAAGG,MAAO,KAnJ3D,0CAuJQ,IAAK,IAAIK,EAAI,EAAGA,EAAI1C,KAAKL,WAAW6C,OAAQE,IAAK,EAE7CZ,EADiB9B,KAAKL,WAAW+C,GAAGZ,eAxJhD,sCA6JoBvB,GACZ,MAAO,CAAEoC,sBAAsB,EAAMf,KAAMrB,KA9JnD,4BAiKUU,GACF,MAAO,CAAE2B,OAAQC,EAA2BC,KAAM7B,aAlK1D,8BAqKYV,GACJ,MAAO,CAAEqC,OAAQC,EAA2BE,QAASxC,WAtK7D,iCA0KQ,MAAO,CAAEqC,OAAQC,EAA2BG,YA1KpD,sLA8KiCxB,IAArBxB,KAAKK,YA9KjB,iEAkL6B4C,MAAMrE,EAAiBE,wCAlLpD,WAkLY6C,EAlLZ,QAmLsBuB,GAnLtB,sBAoLkB,IAAIrF,MAAJ,uCDvLa,kBCuLb,MApLlB,uBAuL6B8D,EAASwB,OAvLtC,QAuLYC,EAvLZ,QAwLiBC,sBAAuB,EAChCD,EAASE,6BAA8B,EACvCF,EAASG,UAAY,IAAIC,uBAAqB,CAC1C7E,OD9LmB,oBCiMvBqB,KAAKK,YAAc,IAAIoD,cAAYL,GAEnCpD,KAAKK,YAAYqD,OAAOC,iBAAxB,sBAAyC,sBAAAC,EAAA,sEAC/B,EAAKvD,YAAYwD,aADc,OAErC,EAAKlD,iBAAYa,GAFoB,4CAhMjD,wIAsM4B,OAAO9B,MAtMnC,MA2MeA,IAEFmD,EAA6B,CACtCG,SAAU,WACVD,QAAS,UACTD,KAAM,QC7MGgB,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDxD,MAAQ,CACTyD,iBAAiB,EACjBC,SAAU,MALC,EADvB,gEAUyB,IAAD,OAChBjE,KAAKkE,cAAgBxE,EAAYyE,WAAU,kBAAM,EAAKC,mBACtDpE,KAAKoE,kBAZb,6CAgBQ1E,EAAY2E,YAAYrE,KAAKkE,iBAhBrC,4KAoB8CI,QAAQC,IAAI,CAAC7E,EAAYsE,kBAAmBtE,EAAYO,YApBtG,mCAoBe+D,EApBf,KAoBgC9D,EApBhC,KAqBQF,KAAKwE,SAAS,CACVR,kBACAC,SAAU/D,GAAQA,EAAKuE,OAvBnC,qIA2Bc,IAAD,EACiCzE,KAAKO,MAAnCyD,EADH,EACGA,gBAAiBC,EADpB,EACoBA,SACzB,GAAKD,EAIE,CACH,IAAMU,EAAW,UAAM9F,EAAiBQ,SAClCuF,EAAa,CAAEC,SAAS,GAAD,OAAKhG,EAAiBS,QAAUkB,MAAO,CAAEsE,OAAO,IAC7E,OAAO7E,KAAK8E,kBAAkBb,EAAUS,EAAaC,GANrD,IAAMI,EAAY,UAAMnG,EAAiBO,UACnC6F,EAAS,UAAMpG,EAAiBI,OACtC,OAAOgB,KAAKiF,cAAcF,EAAcC,KAhCpD,wCAwCsBf,EAAUS,EAAaC,GACrC,OAAQ,kBAAC,WAAD,KAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASO,IAAKC,IAAMC,UAAU,YAAYC,GAAIV,GAA9C,4EA9ChB,oCAoDkBI,EAAcC,GACxB,OAAQ,kBAAC,WAAD,KACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASE,IAAKC,IAAMC,UAAU,YAAYC,GAAIN,GAA9C,aAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASG,IAAKC,IAAMC,UAAU,YAAYC,GAAIL,GAA9C,eA1DhB,GAA+BM,aCSlBC,EAAb,kDAGE,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAEDyB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKlF,MAAQ,CACXmF,WAAW,GALI,EAHrB,2DAaI1F,KAAKwE,SAAS,CACZkB,WAAY1F,KAAKO,MAAMmF,cAd7B,+BAmBI,OACE,gCACE,kBAAC,IAAD,CACEN,UAAU,+EACVO,OAAK,GAEL,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaT,IAAKC,IAAME,GAAG,KAA3B,kCAGA,kBAAC,IAAD,CAAeO,QAAS5F,KAAKwF,aAAcJ,UAAU,SACrD,kBAAC,IAAD,CACEA,UAAU,uCACVS,QAAS7F,KAAKO,MAAMmF,UACpBI,QAAM,GAEN,wBAAIV,UAAU,wBAEZ,kBAAC,IAAD,KAChB,kBAAC,EAAD,OAKgB,kBAAC,IAAD,KACA,kBAAC,IAAD,CACIW,cAAY,sBACZb,IAAKC,IACLC,UAAU,YACVC,GAAG,uBACHO,QAAS,WACPxH,EAAWC,mBAAmB,OAG/B,IATL,yEAeA,wBAAI+G,UAAU,YACZ,uBAAGA,UAAU,qBAAqBY,KAAK,mBAAmBC,OAAO,UAAjE,4DAiBF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEF,cAAY,oBACZb,IAAKC,IACLC,UAAU,YACVC,GAAG,qBAEHO,QAAS,WACPxH,EAAWC,mBAAmB,OAI/B,IAXH,mFAYkB,MAIpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE0H,cAAY,kBACZb,IAAKC,IACLC,UAAU,YACVC,GAAG,oBAJL,kEAWF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEU,cAAY,cACZb,IAAKC,IACLC,UAAU,YACVC,GAAG,mBAJL,yDA3GlB,GAA6BC,aAAhBC,EACJW,YAAcX,EAAQd,K,YCZlB0B,EAAb,yNAQI,OACE,kCATN,GAA0Bb,aAAba,EACJD,YAAcC,EAAK1B,KAgBrB,IAAM2B,EAAb,yNAQI,OACE,yBAAKhB,UAAU,QAAQiB,MAAO,CAACC,WAAW,OAAOC,cAAc,SAG9D,kBAAC,IAAD,CAAOC,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OAClB,4BACEC,KAAK,SACLtB,UAAU,eACViB,MAAO,CAACM,UAAU,OAElBZ,cAAY,kBACZH,QAAS,WAAQa,EAAQ1E,KAAK,sBANhC,qIAYJ,kBAAC,IAAD,CAAOyE,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACX,4BACAJ,MAAO,CAACM,UAAU,MAAMC,MAAM,SAC5BF,KAAK,SACLtB,UAAU,eACVW,cAAY,gBACZH,QAAS,WAAQa,EAAQ1E,KAAK,oBALhC,oIA1BJ,GAA+BuD,aAAlBc,EACJF,YAAcC,EAAK1B,KCjBrB,IAAMoC,EAAb,uKAII,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACA,kBAAC,EAAD,MACG7G,KAAK+D,MAAM+C,SAGtB,yBAAKT,MAAO,CAACU,UAAU,iBAZvB,GAA4BzB,aAAfuB,EACJX,YAAcW,EAAOpC,KCJvB,IAAMuC,EAAb,kDAGE,WAAYjD,GAAQ,IAAD,8BACjB,cAAMA,IACDxD,MAAQ,CAAE0G,UAAW,GAAIC,SAAS,GAFtB,EAHrB,gEASIlH,KAAKmH,wBATT,+BAsCI,IAAIC,EAAWpH,KAAKO,MAAM2G,QACtB,2BAAG,2CACHF,EAAUK,qBAAqBrH,KAAKO,MAAM0G,WAE9C,OACE,6BACE,wBAAI9I,GAAG,cAAP,oBACA,yFACCiJ,KA9CT,8KAoD2BnE,MAAM,mBApDjC,cAoDUtB,EApDV,gBAqDuBA,EAASwB,OArDhC,OAqDUvB,EArDV,OAsDI5B,KAAKwE,SAAS,CAAEyC,UAAWrF,EAAMsF,SAAS,IAtD9C,mJAY8BD,GAC1B,OACE,2BAAO7B,UAAU,sBAAsBkC,kBAAgB,cACrD,+BACE,4BACE,oCACA,yCACA,yCACA,yCAGJ,+BACGL,EAAU9E,KAAI,SAAAoF,GAAQ,OACrB,wBAAIC,IAAKD,EAASE,MAChB,4BAAKF,EAASE,MACd,4BAAKF,EAASG,cACd,4BAAKH,EAASI,cACd,4BAAKJ,EAASK,mBA7B5B,GAA+BtC,aAAlB0B,EACJd,YAAcc,EAAUvC,KCD1B,IAAMoD,EAAb,kDAGE,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IACDxD,MAAQ,CAAEuH,aAAc,GAC7B,EAAKC,iBAAmB,EAAKA,iBAAiBtC,KAAtB,gBAHP,EAHrB,+DAUIzF,KAAKwE,SAAS,CACZsD,aAAc9H,KAAKO,MAAMuH,aAAe,MAX9C,+BAgBI,OACE,6BACE,uCAEA,6EAEA,uBAAGE,YAAU,UAAb,kBAAqC,gCAAShI,KAAKO,MAAMuH,eAEzD,4BAAQ1C,UAAU,kBAAkBQ,QAAS5F,KAAK+H,kBAAlD,kBAxBR,GAA6BzC,aAAhBuC,EACJ3B,YAAc2B,EAAQpD,K,UCCVwD,E,uKAEb,OACI,wG,GAH6B3C,a,QCH5B4C,GACS,EAGf,SAASC,EAAiBC,GAC7B,IAAIC,EAAQD,EAAEE,WAAWC,MAAM,KAE/B,OADAF,EAAM,GAAGA,EAAM,GAAGG,QAAQ,wBAAwB,KAC3CH,EAAMI,KAAK,KCLf,IAAMC,EAAb,+FACWC,GAMH,OAJIA,IACAA,EAAW,IAGXT,EACOlI,KAAK4I,cAET5I,KAAK6I,WAAWF,KAV/B,oCAeQ,OAAO,IAAIrE,SAAQ,SAACtG,EAAS8K,GAG1B,IAAIC,EAAM,GAEVA,EAAMhH,KAAK,CAACiH,KAAK,0DAAaC,GAAG,IACjCF,EAAMhH,KAAK,CAACiH,KAAK,gEAAcC,GAAG,IAClCF,EAAMhH,KAAK,CAACiH,KAAK,mFAAkBC,GAAG,IAGtCjL,EAAQ,CAACkL,OAAO,EAAEC,WAAWJ,SAzBxC,iCA8BkBJ,GACP,OAAO1F,MAAM,6BAA6B0F,GACrCS,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,YAhC1C,2BAoCYkG,GAIJ,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAE3B,OAAQpG,MAAM,UAAWqG,GAClBF,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,cA9CvC,KCAqByG,E,kDACnB,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IACDxD,MAAQ,CAAEsJ,OAAQ,CAACC,UAAU,EAAK/F,MAAM+F,WAAYC,iBAAiB,GAE1E,EAAKC,aAAe,EAAKA,aAAavE,KAAlB,gBAJH,E,yDAONwE,EAAOC,GAClBlK,KAAKO,MAAMsJ,OAAOK,GAAWD,EAAMhE,OAAOkE,MAErCF,EAAMhE,OAAOkE,OAASF,EAAMhE,OAAOkE,MAAM3H,OAG1CxC,KAAKO,MAAMsJ,OAAOK,EAAQ,YAAW,EAEzClK,KAAKwE,SAAS,CAAE4F,IAAKC,KAAKC,a,+BAGlB,IAAD,OACP,OACE,6BACE,yBAAKC,MAAM,YACT,yBAAKA,MAAM,iBACT,2BAAOC,IAAI,sBAAX,iGACA,2BACE9D,KAAK,OACL6D,MAAM,wBACNpM,GAAG,qBACHsM,YAAY,gGACZC,SAAU,SAAC9M,GACP,EAAKoM,aAAapM,EAAE,SAExBuM,MAAOnK,KAAKO,MAAMsJ,OAAOb,KACzB2B,UAAQ,IAGTC,KAEH,yBAAKL,MAAM,iBACT,2BAAOC,IAAI,sBAAX,oCACA,2BACE9D,KAAK,OACL6D,MAAM,wBACNpM,GAAG,qBACHsM,YAAY,kCACZC,SAAU,SAAC9M,GACP,EAAKoM,aAAapM,EAAE,cAExBuM,MAAOnK,KAAKO,MAAMsJ,OAAOC,UACzBa,UAAQ,IAETC,KAGH,yBAAKL,MAAM,iBACT,2BAAOC,IAAI,sBAAX,uEACA,2BACE9D,KAAK,OACL6D,MAAM,wBACNpM,GAAG,qBACHsM,YAAY,sEACZC,SAAU,SAAC9M,GACP,EAAKoM,aAAapM,EAAE,WAExBuM,MAAOnK,KAAKO,MAAMsJ,OAAOgB,OAAqBF,UAAQ,IAEvDC,MAGL,4BAAQhF,QAAS,WAEV,EAAK7B,MAAM+G,cACV,EAAK/G,MAAM+G,aAAa,EAAKvK,MAAMsJ,UAH3C,oD,GAtEwCvE,aCI3ByF,E,kDACnB,WAAYhH,GAAQ,IAAD,8BACjB,cAAMA,IACDxD,MAAQ,CAAEyK,QAAS,GAAIb,MAAO,GAAIJ,iBAAiB,GAExD,EAAKC,aAAe,EAAKA,aAAavE,KAAlB,gBAJH,E,iEAQfzF,KAAKiL,eAAe,M,qCAIPC,GAAK,IAAD,QACX,IAAIxC,GAEVyC,OAAOD,GACN9B,MAAK,SAACgC,GACa,GAAdA,EAAIlC,OACN,EAAK1E,SAAS,CAAEwG,QAASI,EAAIjC,aAE7BkC,MAAMD,EAAIE,YAGbC,OAAM,SAAC3N,GACNyN,MAAM,uE,mCAICpB,GACXjK,KAAKwE,SAAS,CAAE2F,MAAOF,EAAMhE,OAAOkE,QAE/BF,EAAMhE,OAAOkE,OAAuC,KAA9BF,EAAMhE,OAAOkE,MAAM3H,OAG5CxC,KAAKwE,SAAS,CAAEuF,iBAAiB,IAFjC/J,KAAKwE,SAAS,CAAEuF,iBAAiB,IAKnC/J,KAAKiL,eAAehB,EAAMhE,OAAOkE,S,+BAGjC,OACE,yBAAK/E,UAAU,iBACb,yBAAKA,UAAU,iBACb,4KAEA,2BACE+E,MAAOnK,KAAKO,MAAM4J,MAClBO,SAAU1K,KAAKgK,aACf5E,UAAU,eACVsB,KAAK,OACL+D,YAAY,SACZe,aAAW,SACXC,KAAK,KACLC,UAAU,KACVC,UAAU,KACVhB,SAAS,WACT5E,cAAY,qBAEb6E,EACC5K,KAAKO,MAAMwJ,gBACX,oLAGJ,6BACA,wBAAI3E,UAAU,aAAajH,GAAG,UAC3B6B,KAAK4L,sBAEL5L,KAAK6L,gC,4CAKS,IAAD,OACpB,OACE,wBAAIzG,UAAU,mBACZ,kBAAC,EAAD,CACE0E,UAAW9J,KAAKO,MAAM4J,MACtBW,aAAc,SAACgB,IACL,IAAIpD,GACVqD,KAAKD,GAAG1C,MAAK,SAACgC,GACd,GAAkB,GAAdA,EAAIlC,OACN,GAAIhB,EAA4B,CAC9B,IAAI8D,EAAQ,YAAO,EAAKzL,MAAMyK,SAC9BgB,EAASjK,KAAK+J,GAEd,EAAKtH,SAAS,CAAEwG,QAASgB,EAASC,iBAElC,EAAKhB,eAAe,EAAK1K,MAAM4J,YAIjCkB,MAAMD,EAAIE,kB,kDAQK,IAAD,OAC1B,OAAKtL,KAAKO,MAAMyK,QAIThL,KAAKO,MAAMyK,QAAQ7I,KAAI,SAAC+J,EAAKxJ,EAAGyJ,GACrC,OACE,kBAACC,EAAA,EAAD,CACE5F,OAAQ,cAAGC,QAAH,OACN,wBACAJ,MAAO,CAACM,UAAU,OAChBZ,cAAa,UAAYrD,EACzB0C,UAAU,kBACVQ,QAAS,WACPxH,EAAWE,eAAiB4N,EAC5B,EAAKnI,MAAMsI,OAAO7H,SAAS,CAAE8H,KAAM,EAAGC,SAAUL,EAAIjD,OAGtDiD,EAAIpC,UATN,MASoBoC,EAAIlD,YAhBvB,yC,GAtG6B1D,aA8HnC,SAASsF,EAAoB4B,EAASC,EAAKhI,GAChD,OAAI+H,EAEA,yBAAKzG,cAAatB,EAAO,aAAcW,UAAU,kBAAjD,+CAKEqH,EAEA,yBAAK1G,cAAatB,EAAO,aAAcW,UAAU,oBAC9CqH,GAKH,yBAAK1G,cAAatB,EAAO,aAAcW,UAAU,oBAAjD,qD,IChJasH,E,kDACnB,WAAY3I,GAAQ,IAAD,sBAGjB,IAAI4I,GAFJ,cAAM5I,IAEkBA,MAAM4I,cAAe,EAAK5I,MAAM4I,cAAc,cAHrD,OAIjB,EAAKpM,MAAQ,CAAE8I,KAAM,GAAIsD,cAAeA,GAExC,EAAK3C,aAAe,EAAKA,aAAavE,KAAlB,gBANH,E,wDAajBmH,SAASC,eAAe7M,KAAKO,MAAMoM,eAAeG,U,iCAKlD,OAAO9M,KAAKO,Q,mCAGD0J,EAAOC,EAAS6C,EAASC,GACpC,IAAI7C,EAAQF,EAAMhE,OAASgE,EAAMhE,OAAOkE,MAAQF,EAChDjK,KAAKO,MAAM8I,KAAKa,GAAyB,WAAf8C,EAAMtG,MAAmC,WAAfsG,EAAMtG,MAAoC,UAAfsG,EAAMtG,KAAkBuG,SAAS9C,GAASA,EAErH4C,IACF/M,KAAKO,MAAM8I,KAAKa,EAAU,SAAW,6BAAU/B,EAAiBgC,IAIlEnK,KAAKkN,WAAWF,EAAO/C,EAAMhE,OAAOkE,OAEpCnK,KAAKwE,SAAS,CAAE4F,IAAKC,KAAKC,a,2CAKvBtK,KAAK+D,MAAMoJ,YACZnN,KAAK+D,MAAMoJ,UAAUnN,KAAK+D,MAAMqJ,eAAepN,Q,iCAIxCgN,EAAO7C,GAIdnK,KAAKO,MAAMyM,EAAMvI,KAAO,aAHrB0F,I,+BAOG,IAAD,OACHkD,EAASrN,KAAK+D,MAAMsJ,OACxB,OACE,oCACC,yBAAKjI,UAAU,YAAYiB,MAAO,CAACiH,OAAO,SAC1C,0BAAMlI,UAAWiI,EAAOE,WAAYvN,KAAKwN,aAAaH,GAIvD,yBAAKjI,UAAU,aACf,4BAAQjH,GAAI6B,KAAKO,MAAMoM,cAAe/G,QAAS,kBAE/C,EAAKpB,SAAS,CAAC6E,KAAK,MAClB3C,KAAK,QAAQ6D,MAAM,gBAHrB,kEAKN,kBAAC,IAAD,CACE/D,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,4BACJb,QAAS,WAASyH,EAAOI,eAAe,EAAMhH,IACxCV,cAAasH,EAAOK,SACpBhH,KAAK,SACLtB,UAAWiI,EAAOM,aAEjBN,EAAOO,qB,mCAeVC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAlB,GACC,IAAD,OACA,OAAKc,EAKH,oCACE,+BAAQG,GAER,4BACElI,cAAaiH,EAAMvI,KACnB0J,SAAUnB,EAAMmB,SAChB/I,UAAWpF,KAAKoO,cAAc,CAAE3J,KAAMoJ,IACtClD,SAAUqC,EAAMrC,SAChBD,SAAU,SAAC9M,GACT,EAAKoM,aAAapM,EAAGiQ,GAAc,EAAOb,GAEtCkB,GAKFA,EAAiBtQ,EAAG,KAAM,EAAK2C,SAInC,4BAAQ4J,MAAM,IAAd,6EACC2D,GACCA,EAAWtL,QACXsL,EAAW3L,KAAI,SAAC+J,EAAKxJ,EAAGyJ,GACtB,OAAID,EAAI6B,KAAa,EAAKxN,MAAM8I,KAAKwE,GAEjC,4BAAQQ,SAAS,WAAWlE,MAAO+B,EAAI6B,GAAUvG,IAAK0E,EAAI6B,IACvD7B,EAAI8B,IAIF,4BAAQ7D,MAAO+B,EAAI6B,IAAW7B,EAAI8B,QAOhDpD,EACC5K,KAAKO,MAAM8I,KAAKwE,EAAe,WAC/B,oDACAA,IA7CG,+F,oCAmDGb,GACZ,IAAIsB,EAAM,eASV,OAP2C,IAAvCtO,KAAKO,MAAMyM,EAAMvI,KAAO,WAC1B6J,GAAO,aACyC,IAAvCtO,KAAKO,MAAMyM,EAAMvI,KAAO,aACjC6J,GAAO,eAIFA,I,mCAGIjB,GAAS,IAAD,OACnB,OAAOA,EAAOkB,OAAOpM,KAAI,SAAC6K,EAAOtK,EAAGyJ,GAClC,OAAQa,EAAMtG,MACZ,IAAK,OACZ,OAAO,yBAAKtB,UAAW4H,EAAMwB,IAAMxB,EAAMwB,IAAM,YAClC,+BAAQxB,EAAMiB,OACd,2BACAtC,UAAWqB,EAAMyB,IACf/H,KAAK,OACLgI,OAAO,UACPtJ,UAAW,EAAKgJ,cAAcpB,GAC9BvC,YAAauC,EAAMvC,YACnBC,SAAU,SAAC9M,IA6H3B,SAA2BA,EAAEkE,GAC3B,IAAIlE,EAAEqI,OAAO0I,OAAgC,GAAvB/Q,EAAEqI,OAAO0I,MAAMnM,OACrC,OACA,IAAIoM,EAAS,IAAIC,WAGnBD,EAAOE,cAAclR,EAAEqI,OAAO0I,MAAM,IACpCC,EAAOG,UAAY,SAAUC,GACrBA,EAAI/I,OAAOgJ,YAAcJ,WAAWK,MAOpCpN,EAASkN,EAAI/I,OAAOkJ,SA1IVC,CAAkBxR,GAAE,SAACyR,GAEnB,IAAIC,EAAUD,EAElC,EAAK9O,MAAM8I,KAAK2D,EAAMvI,MAAM6K,EACR,EAAK9K,SAAS,CAAC+K,KAAKlF,KAAKC,eAI7BK,SAAUqC,EAAMrC,SAChB5E,cAAaiH,EAAMvI,KACnB0J,SAAUnB,EAAMmB,WAGjB,EAAK5N,MAAM8I,KAAK2D,EAAMvI,OACvB,yBAAK+K,IAAK,EAAKjP,MAAM8I,KAAK2D,EAAMvI,MAAQgL,MAAM,MAAMC,OAAO,QAC1D9E,EACC,EAAKrK,MAAMyM,EAAMvI,KAAO,WAAW,KACnCuI,EAAMvI,OAId,IAAK,OACL,IAAK,QACL,IAAK,SACH,OACE,yBAAKW,UAAW4H,EAAMwB,IAAMxB,EAAMwB,IAAM,YACtC,+BAAQxB,EAAMiB,OACd,2BACAtC,UAAWqB,EAAMyB,IACf/H,KAAqB,SAAfsG,EAAMtG,KAAkB,OAAS,SACvCtB,UAAW,EAAKgJ,cAAcpB,GAC9BvC,YAAauC,EAAMvC,YACnBC,SAAU,SAAC9M,GACU,UAAfoP,EAAMtG,KACR,EAAKsD,aAAapM,EAAGoP,EAAMvI,MAAM,EAAMuI,GAEvC,EAAKhD,aAAapM,EAAGoP,EAAMvI,MAAM,EAAOuI,GAGtCA,EAAM2C,UACR3C,EAAM2C,SAAS/R,EAAG,KAAM,IAG5BuM,MAAO,EAAK5J,MAAM8I,KAAK2D,EAAMvI,MAC7BkG,SAAUqC,EAAMrC,SAChB5E,cAAaiH,EAAMvI,KACnB0J,SAAUnB,EAAMmB,WAEjBvD,EACC,EAAKrK,MAAMyM,EAAMvI,KAAO,WAAW,KACnCuI,EAAMvI,MAGQ,UAAfuI,EAAMtG,MACL,0BAAMX,cAAaiH,EAAMvI,KAAO,QAAS4B,MAAO,CAACM,UAAU,QACxD,EAAKpG,MAAM8I,KAAK2D,EAAMvI,KAAO,WAKxC,IAAK,SACH,OACE,yBAAKW,UAAW4H,EAAMwB,IAAMxB,EAAMwB,IAAM,YACrC,EAAKoB,aACJ5C,EAAMvI,KACNuI,EAAM6C,QACN,KACA,OACA,kCACA,SAACjS,EAAGsO,GACEc,EAAM2C,UACR3C,EAAM2C,SAAS/R,EAAG,KAAM,KAG5BoP,GAEDpC,EACC,EAAKrK,MAAMyM,EAAMvI,KAAO,WAAW,KACnCuI,EAAMvI,OAKd,IAAK,WACH,OACE,yBAAKW,UAAW4H,EAAMwB,IAAMxB,EAAMwB,IAAM,YACtC,+BAAQxB,EAAMiB,OACd,8BACEE,SAAUnB,EAAMmB,SAChBpI,cAAaiH,EAAMvI,KACnBiC,KAAK,OACLtB,UAAW,EAAKgJ,cAAcpB,GAC9BvC,YAAauC,EAAMvC,YACnBC,SAAU,SAAC9M,GACU,UAAfoP,EAAMtG,KACR,EAAKsD,aAAapM,EAAGoP,EAAMvI,MAAM,EAAMuI,GAEvC,EAAKhD,aAAapM,EAAGoP,EAAMvI,MAAM,EAAOuI,GAGtCA,EAAM2C,UACR3C,EAAM2C,SAAS/R,EAAG,KAAM,IAG5BuM,MAAO,EAAK5J,MAAM8I,KAAK2D,EAAMvI,MAC7BkG,SAAUqC,EAAMrC,WAEjBC,EACC,EAAKrK,MAAMyM,EAAMvI,KAAO,WAAW,KACnCuI,EAAMvI,OAKd,QACE,OAAO,6C,GApSwBa,a,gBCFpBwK,G,WAKjB,aAAe,yBAHf/G,MAAQ,GAIJ/I,KAAK+I,MAAMhH,KAAK,CAACiH,KAAM,2BAAQC,GAAI,EAAG8G,aAAc,KAAOC,OAAQ,KACnEhQ,KAAK+I,MAAMhH,KAAK,CAACiH,KAAM,2BAAQC,GAAI,EAAG8G,aAAc,KAAOC,OAAQ,KACnEhQ,KAAK+I,MAAMhH,KAAK,CAACiH,KAAM,eAAMC,GAAI,EAAG8G,aAAc,KAAOC,OAAQ,K,0DAItD,IAAD,OAEV,OAAO,IAAI1L,SAAQ,SAACtG,EAAS8K,GAGzB9K,EAAQ,CAACkL,OAAQ,EAAGC,WAAY,EAAKJ,a,mCAMzC,OAAO9F,MAAM,eACRmG,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,Y,2BAG9BkG,GAID,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAE3B,OAAQpG,MAAM,cAAeqG,GACtBF,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,Y,+BAgB/B,OAAI+E,EACOlI,KAAK4I,cAET5I,KAAK6I,iB,KCrDCoH,G,kDAGlB,WAAYlM,GAAQ,IAAD,8BAClB,cAAMA,IAHPmM,kBAAkB,IAAIJ,GAIrB,EAAKvP,MAAQ,GAFK,E,wDAMP,IAAD,OAuDV,MAtDa,CACXgN,UAAW,WACXK,WAAY,qBACZF,SAAU,OACVD,eAAgB,SAACpE,EAAM5C,GAGrB,EAAKsF,QAEP4B,YAAa,kBACbY,OAAQ,CACN,CACE9J,KAAM,OACNgG,YAAa,oDACbwD,MAAO,oDACPvH,KAAM,OACNiE,UAAU,EACV6D,IAAK,YAEP,CACE/J,KAAM,SACNgG,YAAa,0DACbwD,MAAO,gEACPvH,KAAM,SACNiE,UAAU,EACV6D,IAAK,YAEP,CACE/J,KAAM,eACNgG,YAAa,4FACbwD,MAAO,4FACPvH,KAAM,QACNiE,UAAU,EACV6D,IAAK,YAEP,CACE/J,KAAM,2BACNgG,YAAa,gIACbwD,MAAO,gIACPvH,KAAM,SACNiE,UAAU,EACV6D,IAAK,YAGP,CACE/J,KAAM,QACNgG,YAAa,iCACbwD,MAAO,iCACPvH,KAAM,OACNiE,UAAU,EACV6D,IAAK,gB,6BAON,IAAD,OACAnF,EAAKrJ,KAAKmQ,mCAAmCC,WAAW/G,KAExDA,EAAKL,MAIO,MAAbK,EAAK2G,SACN3G,EAAK2G,OAAO,GAGThQ,KAAKO,MAAM8P,SAAwB,MAAbhH,EAAK2G,QAKhChQ,KAAKmQ,mCAAmCG,YAGxCtQ,KAAKkQ,kBAAkBnE,KAAK1C,GAAMD,MAAK,SAAAgC,GAErB,IAAbA,EAAIlC,OAEL,EAAKqH,eAELlF,MAAMD,EAAIE,aAbZD,MAAM,wGARNA,MAAM,6F,2CA8BRrL,KAAKuQ,iB,qCAIQ,IAAD,OAEZ,OAAOvQ,KAAKkQ,kBAAkB/E,SAAS/B,MAAK,SAAAgC,GAC3B,GAAZA,EAAIlC,OACL,EAAK1E,SAAS,CAACgM,YAAYpF,EAAIjC,aAE/BkC,MAAMD,EAAIE,c,+BAQd,IAAI+B,EAASrN,KAAKyQ,YAClB,OACE,yBAAKrL,UAAU,OACb,yBAAKA,UAAU,YAAYW,cAAY,WACrC,kBAAC,EAAD,CACEsH,OAAQA,EACRF,UAAWnN,KACXoN,cAAc,wCAIlB,yBAAKhI,UAAU,aACb,2BAAOmF,MAAM,QAAQxE,cAAY,SAC/B,+BACE,4BACE,wBAAI2K,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,sBACA,wBAAIA,MAAM,OAAV,wCACA,wBAAIA,MAAM,OAAV,iIACA,wBAAIA,MAAM,OAAV,qDAEA,wBAAIA,MAAM,OAAV,0CAGJ,2BAAO3K,cAAY,QAAQ/F,KAAK2Q,iB,iCAM9B,IAAD,OACT,OAAK3Q,KAAKO,MAAMiQ,YAITxQ,KAAKO,MAAMiQ,YAAYrO,KAAI,SAAC+J,EAAKxJ,EAAGyJ,GACzC,OACE,wBAAI3E,IAAK0E,EAAIjD,IACX,wBAAIyH,MAAM,OAAOxE,EAAIjD,IACrB,4BAAKiD,EAAIlD,MACT,4BAAKkD,EAAI8D,QACT,4BAAK9D,EAAI0E,0BAET,wBAAIvK,MAAO,CAACM,UAAU,QAAtB,KAAiCwB,EAAiB+D,EAAI6D,cAAtD,+BACA,4BAAI,4BAAQ3K,UAAU,eACrBQ,QAAS,kBAAI,EAAKiL,KAAK3E,KADpB,6CAZD,uC,2BAoBNA,GAGHlM,KAAKmQ,mCAAmC3L,SAAS,CAAC6E,KAAK6C,Q,GA9Kf5G,aCH/BwL,GAAkB,CAC3BC,OAAO,CACHC,UAAW,WCEEC,G,kDACnB,WAAYlN,GAAQ,IAAD,8BACjB,cAAMA,IACDxD,MAAQ,GAFI,E,iEAMjBP,KAAKkR,uB,2CAGe,IAAD,QACX,IAAIpB,IACV3E,SAAS/B,MAAK,SAACgC,GACI,IAAfA,EAAIlC,OACN,EAAK1E,SAAS,CAAE2M,YAAa/F,EAAIjC,aAEjCkC,MAAMD,EAAIE,c,+BAMd,OACE,6BACF,wBAAIjF,MAAOyK,GAAiBC,QAA5B,iEACI,0BAAM1K,MAAO,CAAE+K,QAAS,QAAUrL,cAAY,mBAA9C,mBAKA,yBAAKA,cAAY,kBAAkBX,UAAU,OAC1CpF,KAAKqR,wB,0CAOZ,OAAKrR,KAAKO,MAAM4Q,YAITnR,KAAKO,MAAM4Q,YAAYhP,KAAI,SAAC+J,EAAKxJ,EAAGyJ,GACzC,OAAOmF,GAAoBpF,MAJpB,yC,GAvCgC5G,aAgDhCgM,GAAsB,SAACC,EAAYzP,EAASuK,GACvD,OACE,yBAAKjH,UAAU,YAEb,yBAAKmF,MAAM,QACT,yBAAKA,MAAM,aACT,wBAAIA,MAAM,cAAV,IAAyBgH,EAAWvI,MAMpC,yBAAKwG,IAAK+B,EAAWC,MAAO/B,MAAM,MAAMC,OAAO,QAE/C,uBAAGnF,MAAM,aAAT,2DACcgH,EAAWvB,OADzB,+CAKK,KAGFlO,GAEF,oCACA,kBAACsK,EAAA,EAAD,CACT5F,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,4BACJb,QAAS,WACPxH,EAAWC,mBAAmBkT,EAChC9K,EAAQ1E,KAAK,yBAGPgE,cAAY,sBACZW,KAAK,SACLtB,UAAU,mBARZ,kDAgBJ,kBAACgH,EAAA,EAAD,CACE5F,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,4BACJb,QAAS,WACPxH,EAAWC,mBAAmBkT,EAChC9K,EAAQ1E,KAAK,uBAEbgE,cAAY,oBACNW,KAAK,SACLtB,UAAU,mBAPZ,6CAiBQtD,GAAY,4BACZiE,cAAa,QAAUwL,EAAWvI,KAClC3C,MAAO,CAAEoL,MAAO,SAChB/K,KAAK,SACLtB,UAAU,4BACVQ,QAAS,WAER,IAAI2L,EAAWvB,QAAUuB,EAAWvB,QAAQ,EAG1C,OAFA3D,EAAO7H,SAAS,CAACkN,OAAO,4KACxBrG,MAAM,uKAGRgB,EAAO7H,SAAS,CAACkN,OAAO,OAEvB5P,MAdU,4CC9GH6P,G,kDACnB,WAAY5N,GAAQ,IAAD,8BACjB,cAAMA,IACDxD,MAAQ,CAAEqR,MAAO,IAFL,E,iEAOjB5R,KAAK6R,sB,0CAGc,IAAD,QACV,IAAI/B,IACV3E,SAAS/B,MAAK,SAACgC,GACE,GAAZA,EAAIlC,OACH,EAAK1E,SAAS,CAAEoN,MAAOxG,EAAIjC,aAG3BkC,MAAMD,EAAIE,YAGfC,OAAM,SAAA3N,GACLyN,MAAM,uE,wCAIO,IAAD,OAChB,OAAKrL,KAAKO,MAAMqR,MAIT5R,KAAKO,MAAMqR,MAAMzP,KAAK,SAAC+J,EAAKxJ,EAAGyJ,GACpC,OAAO,kBAACC,EAAA,EAAD,CAAO5F,OAAQ,cAAGC,QAAH,OAIpB6K,GAAqBpF,GAAI,WAEjC9N,EAAWC,mBAAmB6N,EAE9B,EAAKnI,MAAMsI,OAAO7H,SAAS,CAAC8H,KAAK,EAAEwF,aAAa5F,EAAIjD,OAClD,SAbW,uC,+BAqBT,OAAO,oCACP,6OACCjJ,KAAKO,MAAMmR,QAAU,yBAAKrL,MAAOyK,GAAiBC,OAAQ3L,UAAU,sBAC5DpF,KAAKO,MAAMmR,QAIpB,yBAAKtM,UAAU,OAGdpF,KAAK+R,wB,GA3DoCzM,aCHzB0M,G,kDACjB,WAAYjO,GAAQ,IAAD,8BACf,cAAMA,IACDxD,MAAQ,CAAE8I,KAAM,GAAIU,iBAAiB,GAE1C,EAAKC,aAAe,EAAKA,aAAavE,KAAlB,gBAJL,E,yDAOJwE,EAAOC,EAAQ6C,GAE1B,IAAI5C,EAAMF,EAAMhE,OAASgE,EAAMhE,OAAOkE,MAAQF,EAC9CjK,KAAKO,MAAM8I,KAAKa,GAAYC,EAGzB4C,IACC/M,KAAKO,MAAM8I,KAAKa,GAAS/B,EAAiBnI,KAAKO,MAAM8I,KAAKa,KAGzDC,GAASA,EAAM3H,OAGhBxC,KAAKO,MAAM8I,KAAKa,EAAQ,YAAW,EAEvClK,KAAKwE,SAAS,CAAE4F,IAAKC,KAAKC,a,uDAKKc,EAAI3G,GACnC,IAAIwN,EAAK,GACTA,EAAKxN,GAAM2G,EAAIjC,WAEF,GAAZiC,EAAIlC,OAEHlJ,KAAKwE,SAASyN,GAEd5G,MAAMD,EAAIE,W,mDAKaF,EAAI3G,GAC7B,IAAIwN,EAAK,GACTA,EAAKxN,GAAM2G,EAAI8G,OAEF,GAAZ9G,EAAIlC,OAEHlJ,KAAKwE,SAASyN,GAEd5G,MAAMD,EAAIE,W,mCAMHuC,EAAaC,EAAWC,EAAQC,EAAQC,EAAMC,GAAkB,IAAD,OAEhF,OAAKJ,EAKU,oCACD,2BAAOtD,IAAI,sBAAsByD,GAEnC,4BAAQ1D,MAAM,gBAAgBI,UAAQ,EACrCD,SAAU,SAAC9M,GAGN,GAFA,EAAKoM,aAAapM,EAAGiQ,GAElBK,EAAiB,CACtB,IAAIhC,EAAM4B,EAAWqE,MAAK,SAAAC,GAAE,OAAEA,EAAGrE,GAAS,KAAKnQ,EAAEqI,OAAOkE,SAElD+D,EAAiBtQ,EAAEsO,MAGjC,4BAAQ/B,MAAM,IAAd,6EACA2D,EAAW3L,KAAI,SAAC+J,EAAIxJ,EAAEyJ,GAEnB,OAAGD,EAAI6B,KAAW,EAAKxN,MAAM8I,KAAKwE,GACzB,4BAAQQ,SAAS,WAAWlE,MAAO+B,GAAMA,EAAI8B,IAG7C,4BAAQ7D,MAAO+B,EAAI6B,IAAW7B,EAAI8B,QAKzCpD,EAAoB5K,KAAKO,MAAM8I,KAAKwE,EAAa,WAAW,sDA7B9D,iG,GA1DgCvI,aCD9B+M,GAAb,iGAIQ,OAAInK,EACOlI,KAAK4I,cAET5I,KAAK6I,eAPpB,oCAYQ,OAAO,IAAIvE,SAAQ,SAACtG,EAAS8K,GAO1B9K,EAAQ,CAACkL,OAAO,EAAEgJ,OAAO,CAIxBI,KAAK,6CACLvC,aAAa,aAxBzB,6CCAawC,GAAb,oHAGgCC,EAAOC,GAC/B,OAAQxP,MAAM,uDAAD,OAAwDuP,EAAxD,qBAA2EC,IACnFrJ,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,YALvC,2CAQqBuP,EAAaC,EAAKlH,GACnC,OAAQxI,MAAM,sDAAD,OAAuDyP,EAAvD,iBAA4EC,EAA5E,iBAAyFlH,IACrGrC,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,YAV/B,2BAcSkG,GAGD,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAEzB,OAAQpG,MAAM,yBAA0BqG,GACnCF,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,cAvBvC,KCSqByP,G,kLACE,IAAD,OAClB5S,KAAK6S,qBAAqBzJ,MAAK,SAAA0J,GAE7B,EAAKC,mBAAmB3J,MAAK,SAAA4J,GAE3B,EAAKC,iBACJ1H,OAAM,SAAAyH,GACP,EAAKC,oBAKN1H,OAAM,SAAAuH,GACP,EAAKG,mB,oCAaH7U,EAAWC,oBAAsBD,EAAWE,gBAE9C0B,KAAKkT,4BACD9U,EAAWC,mBAAmB4K,GAC9B7K,EAAWE,eAAe2K,M,2CAQZ,IAAD,OAEpB,OADS,IAAI6G,IACH3E,SAAS/B,MAAK,SAACgC,GAGtB,GAFA,EAAK+H,iCAAiC/H,EAAK,eAEvChN,EAAWC,mBAAoB,CACjC,IAAIgL,EAAO,EAAK8G,mCAAmCC,WAAW/G,KAG9DA,EAAKyI,aAAe1T,EAAWC,mBAAmB4K,GAElDI,EAAK0G,aAAe3R,EAAWC,mBAAmB0R,aAElD1G,EAAK+J,kBAAoBjL,EACvB/J,EAAWC,mBAAmB0R,cAGhC,EAAKI,mCAAmC3L,SAAS,CAC/C6E,KAAMA,EACNgK,GAAIhJ,KAAKC,iB,yCAMG,IAAD,OAElB,OADS,IAAI5B,GACJyC,SAAS/B,MAAK,SAACgC,GAIrB,GAHA,EAAK+H,iCAAiC/H,EAAK,WAGvChN,EAAWE,eAAgB,CAC7B,IAAI+K,EAAO,EAAK8G,mCAAmCC,WAAW/G,KAE9DA,EAAKkD,SAAWnO,EAAWE,eAAe2K,GAE1C,EAAKkH,mCAAmC3L,SAAS,CAC/C6E,KAAMA,EACNgK,GAAIhJ,KAAKC,iB,2BAMZgJ,EAAa7M,GAChB,IAAI4C,EAAOiK,EAAYlD,WAAW/G,KAClC,GACGA,EAAKyI,cACLzI,EAAKkD,UACLlD,EAAK0G,cACL1G,EAAKkK,MACLlK,EAAKmK,WALR,CAYA,IAAInK,EAAKkK,KAAK,IAAI/Q,OAAO,EAIvB,OAHA6I,MACE,sJAEK,EAET,IACE4B,SAAS5D,EAAKkK,MACd,MAAO3V,GAEP,YADAyN,MAAM,sPAIA,IAAIkH,IAGVxG,KAAK1C,GACJD,MAAK,SAACgC,GACc,IAAfA,EAAIlC,QAGN9K,EAAWG,wBAA0B6M,EAAI8G,OACzCzL,EAAQ1E,KAAK,0BAIbsJ,MAAMD,EAAIE,YAGbC,OAAM,SAAC3N,GACNyN,MAAM,iIAnCRA,MAAM,uP,kCAuCG,IAAD,OAkFV,MAjFa,CACXkC,UAAW,WACXK,WAAY,0DACZF,SAAU,wBACVD,eAAgB,SAACpE,EAAM5C,GACrB,EAAKsF,KAAK1C,EAAM5C,IAElBkH,YAAa,kBACbY,OAAQ,CACN,CACE9J,KAAM,eACNgG,YAAa,oDACbwD,MAAO,iCACPvH,KAAM,SACNmJ,QAAS7P,KAAKO,MAAMiQ,YACpBiD,UAAW,OACXC,WAAY,KACZ/I,UAAU,EACV6D,IAAK,YAEP,CAGE/J,KAAM,WACNgG,YAAa,iCACbwD,MAAO,iCACPvH,KAAM,SACNiE,UAAU,EACVkF,QAAS7P,KAAKO,MAAMyK,QACpByI,UAAW,OACXC,WAAY,KACZlF,IAAK,YAEP,CACE/J,KAAM,eACNgG,YAAa,4FACbwD,MAAO,4FACPvH,KAAM,QACNyH,UAAU,EACVxD,UAAU,EACV6D,IAAK,YAGP,CACE/J,KAAM,OACNgG,YAAa,8EACbwD,MAAO,8EACPvH,KAAM,SACNiE,UAAU,EACV6D,IAAK,WACLmB,SAAU,SAAC/R,EAAGsO,EAAKoH,GACjB,EAAKK,oBAAoBL,KAG7B,CACE7O,KAAM,aACNgG,YAAa,mEACbwD,MAAO,mEACPvH,KAAM,QACNyH,UAAU,EACVxD,UAAU,EACV6D,IAAK,YAEP,CACE/J,KAAM,WACNgG,YAAa,yFACbwD,MAAO,yFACPvH,KAAM,OACNiE,UAAU,EACV6D,IAAK,YAEP,CACE/J,KAAM,cACNgG,YAAa,6CACbwD,MAAO,6CACPvH,KAAM,WACNiE,UAAU,EACV6D,IAAK,gB,8CAOY,IAAD,QACd,IAAI6D,IACVlH,SAAS/B,MAAK,SAACgC,GACf,EAAKwI,6BAA6BxI,EAAK,gB,+BAKzC,IAAIiC,EAASrN,KAAKyQ,YAClB,OACE,yBAAKrL,UAAU,OACb,kBAAC,EAAD,CACEiI,OAAQA,EACRF,UAAWnN,KACXoN,cAAc,0C,uCAMLxP,GACf,GAAIoC,KAAKO,MAAM8I,KAAK0G,aAAc,CAChC,IAAI5F,EACFnK,KAAKO,MAAM8I,KAAK0G,aAChB9C,SAASjN,KAAKO,MAAM8I,KAAKkK,KAAOvT,KAAKO,MAAM8I,KAAKkK,KAAO,GAEzDvT,KAAKgK,aAAaG,EAAO,cAAc,GACvCnK,KAAKgK,aAAahK,KAAKO,MAAM8I,KAAK0G,aAAc,gBAAgB,M,kDAIxCyC,EAAQC,GAAW,IAAD,QAEpC,IAAIF,IAGVW,4BAA4BV,EAAOC,GAChCrJ,MAAK,SAACgC,GACL,GAAmB,IAAfA,EAAIlC,OAAc,CAEpB,IAAIG,EAAO,EAAK8G,mCAAmCC,WAAW/G,KAE9DA,EAAI,KAAS+B,EAAI8G,OAAO2B,GAExB,EAAK1D,mCAAmC3L,SAAS,CAC/C6E,KAAMA,EACNgK,GAAIhJ,KAAKC,WAIX,EAAKqJ,oBAAoB,EAAKxD,yCAG9B9E,MAAMD,EAAIE,YAGbC,OAAM,SAAC3N,GACNyN,MAAM,8H,0CAIMiI,GAClB,IAAIQ,EAAYR,EAAYlD,WACxB2D,EACA9G,SAAS6G,EAAUzK,KAAK0G,cACxB9C,SAAS6G,EAAUzK,KAAKkK,KAAOO,EAAUzK,KAAKkK,KAAO,GAEzDO,EAAUzK,KAAKmK,WAAaO,EAE5BD,EAAUzK,KAAK2K,gBAAkB7L,EAAiB4L,GAElDT,EAAY9O,SAAS,CAAE6O,GAAIhJ,KAAKC,e,GA/RI0H,ICVnBiC,G,uKAEb,OACI,kG,GAHiC3O,aCAxB4O,G,uKAEb,OACI,kC,GAHoC5O,aCQ3B6O,G,kDAEjB,WAAYpQ,GAAQ,IAAD,8BACf,cAAMA,IACDxD,MAAQ,CAAE+L,KAAK,GAFL,E,qDAKf,OACI,6BACA,+JAEZ,kBAAC,GAAD,MACM,6BAE4B,GAAjBtM,KAAKO,MAAM+L,MAAY,kBAAC,GAAD,CAAkBD,OAAQrM,OAChC,GAAjBA,KAAKO,MAAM+L,MAAWtM,KAAKO,MAAMuR,cAC7B,kBAAC,EAAD,CAAczF,OAAQrM,OAER,GAAjBA,KAAKO,MAAM+L,MAAWtM,KAAKO,MAAMuR,cAChC1T,EAAWE,eAAe0K,MACxB,kBAAC,GAAD,CAAYqD,OAAQrM,OAEN,GAAjBA,KAAKO,MAAM+L,MAAWtM,KAAKO,MAAMuR,cAChC1T,EAAWE,eAAe0K,MACxB,kBAAC,GAAD,CAAiBqD,OAAQrM,Y,GAxBDsF,aCFxB8O,G,kLAEbpU,KAAK6S,uB,2CAOc,IAAD,QACZ,IAAI/C,IACR3E,SAAS/B,MAAK,SAAAgC,GACd,EAAK+H,iCAAiC/H,EAAI,eAEtChN,EAAWC,qBACb,EAAKkC,MAAM8I,KAAKyI,aAAa1T,EAAWC,mBAAmB4K,S,+BAK3D,IAAD,OACP,OACE,yBAAK7D,UAAU,OAEb,yBAAKA,UAAU,YACb,yBAAKmF,MAAM,QACT,yBAAKA,MAAM,aAEVvK,KAAK4P,aACL,eAAe5P,KAAKO,MAAMiQ,YAAY,KAAK,OAAO,mCAInD,yBAAKjG,MAAM,aACT,2BAAOC,IAAI,sBAAX,6FACA,2BACE9D,KAAK,OACL6D,MAAM,wBACNpM,GAAG,qBACHsM,YAAY,iEACb0D,UAAQ,EACPhE,MAAOnK,KAAKO,MAAM8I,KAAK0G,aACvBpF,UAAQ,IAGTC,KAGH,yBAAKL,MAAM,aACT,2BAAOC,IAAI,sBAAX,oEACA,2BACE9D,KAAK,OACL6D,MAAM,wBACNpM,GAAG,qBACHsM,YAAY,wCACZ0D,UAAQ,EAERhE,MAAOnK,KAAKO,MAAM8I,KAAKmK,WACvB7I,UAAQ,IAGTC,KAGH,yBAAKL,MAAM,aACVvK,KAAK4P,aACL,WAAW5P,KAAKO,MAAMyK,QAAQ,KAAK,OAAO,mCAI3C,4BACEpF,QAAS,WACH,EAAK7B,MAAM+G,cACb,EAAK/G,MAAM+G,aAAa,EAAKvK,MAAM8I,MAGrC,EAAKtF,MAAMsI,OAAO7H,SAAS,CAAC8H,KAAK,MANrC,6DAaJ,yBAAKlH,UAAU,YACf,yBAAKmF,MAAM,aACL,2BAAOC,IAAI,sBAAX,+EACA,2BACE9D,KAAK,SACL6D,MAAM,wBACNpM,GAAG,qBACHsM,YAAY,wEACZC,SAAU,SAAC9M,GACT,EAAKoM,aAAapM,EAAG,QACtB,EAAKyW,iBAAiBzW,IAGvBuM,MAAOnK,KAAKO,MAAM8I,KAAKkK,KACvB5I,UAAQ,IAGTC,KAED,yBAAKL,MAAM,aACX,2BAAOC,IAAI,sBAAX,+CACA,2BACE9D,KAAK,OACL6D,MAAM,wBACNpM,GAAG,qBACHsM,YAAY,kCACZC,SAAU,SAAC9M,GACT,EAAKoM,aAAapM,EAAG,aAEvBuM,MAAOnK,KAAKO,MAAM8I,KAAKiL,SACvB3J,UAAQ,IAETC,EAAoB5K,KAAKO,MAAMgU,kBAElC,yBAAKhK,MAAM,aACT,2BAAOC,IAAI,sBAAX,8CACA,8BACE9D,KAAK,OACL6D,MAAM,wBACNpM,GAAG,qBACHsM,YAAY,6CACZC,SAAU,SAAC9M,GACT,EAAKoM,aAAapM,EAAG,gBAEvBuM,MAAOnK,KAAKO,MAAM8I,KAAKmL,YACvB7J,UAAQ,IAETC,EAAoB5K,KAAKO,MAAMkU,2B,GAlILzC,ICLpB0C,G,WAKjB,aAAe,yBAHf3L,MAAQ,GAIJ/I,KAAK+I,MAAMhH,KAAK,CAACiH,KAAM,2BAAQC,GAAI,EAAG8G,aAAc,KAAOC,OAAQ,KACnEhQ,KAAK+I,MAAMhH,KAAK,CAACiH,KAAM,2BAAQC,GAAI,EAAG8G,aAAc,KAAOC,OAAQ,KACnEhQ,KAAK+I,MAAMhH,KAAK,CAACiH,KAAM,eAAMC,GAAI,EAAG8G,aAAc,KAAOC,OAAQ,K,0DAItD,IAAD,OAEV,OAAO,IAAI1L,SAAQ,SAACtG,EAAS8K,GAGzB9K,EAAQ,CAACkL,OAAQ,EAAGC,WAAY,EAAKJ,a,+CAKpB2J,EAAaiC,EAASC,GAC3C,OAAO3R,MAAM,oDAAD,OAAqDyP,EAArD,iBAA0EiC,EAA1E,iBAA2FC,IACtGxL,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,Y,iCAEpBwR,EAASC,GAChB,OAAO3R,MAAM,uBAAD,OAAwB0R,EAAxB,iBAAyCC,IAChDxL,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,Y,2BAG9BkG,GAID,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAE3B,OAAQpG,MAAM,iBAAkBqG,GACzBF,MAAK,SAAAzH,GAAQ,OAAIA,EAASwB,Y,6BAa5BuP,EAAaiC,EAASE,GAGzB,OAAI3M,EACOlI,KAAK4I,cAGb8J,EACQ1S,KAAK8U,yBAAyBpC,EAAaiC,EAASE,GAGpD7U,KAAK6I,WAAW8L,EAASE,O,KC7DvBE,G,kDACnB,WAAYhR,GAAQ,IAAD,8BACjB,cAAMA,IACDxD,MAAQ,CAAEiQ,YAAa,IAFX,E,6DAMjB,OAAOxQ,KAAKO,MAAMiQ,c,2CAEE,IAAD,OAEnB,OADQ,IAAIV,IACH3E,SAAS/B,MAAK,SAACgC,GACJ,GAAdA,EAAIlC,OACN,EAAK1E,SAAS,CAAEgM,YAAapF,EAAIjC,aAEjCkC,MAAMD,EAAIE,c,2CAMdtL,KAAKkR,uB,mCAeMoC,GACX,IAAKA,EAAYlD,WACf,MAAM,IAAIvS,MAAM,kCAClB,IAAKyV,EAAYlD,WAAW/G,KAC1B,MAAM,IAAIxL,MAAM,uCAElB,IAAIiU,EAAe7E,SAASqG,EAAYlD,WAAW/G,KAAKyI,cAExD,GAAKA,EAAL,CAMA,IAAKA,EAAc,MAAM,IAAIjU,MAAM,wBAGnC,IAAI0T,EAAavR,KAAKO,MAAMiQ,YAAY2B,MAAK,SAAC6C,GAAD,OAAOA,EAAE/L,IAAM6I,KAE5D,IAAKP,EAAY,MAAM,IAAI1T,MAAM,sBACjC,IAAKyV,EAAYlD,WAAW/G,KAC1B,MAAM,IAAIxL,MAAM,4BAGlByV,EAAYlD,WAAW/G,KAAK0G,aAAewB,EAAWxB,aACtDuD,EAAYlD,WAAW/G,KAAK+J,kBAAoBjL,EAC9CoJ,EAAWxB,cAGb,IAAIkF,EAAO3B,EAAYlD,WAAW/G,KAAKkK,KACnCD,EAAYlD,WAAW/G,KAAKkK,KAC5B,EAGA2B,EAAa3D,EAAWxB,aAAekF,EAE3C3B,EAAYlD,WAAW/G,KAAKmK,WAAa0B,EACzC5B,EAAYlD,WAAW/G,KAAK2K,gBAAkB7L,EAAiB+M,GAE/D5B,EAAY9O,SAAS,CAAE2Q,IAAK9K,KAAKC,gBA7B/Be,MAAM,mL,iCAgCCiI,GACT,IAAIjK,EAAOiK,EAAYlD,WAAW/G,KAClC,OACGA,EAAKkK,MACLlK,EAAKyI,cACLzI,EAAK0G,cACL1G,EAAKmK,cAQJnK,EAAKkK,KAAK,IAAI/Q,OAAO,KACvB6I,MACE,sJAEK,IAVPA,MACE,gVAEK,K,2BAYNhC,EAAM5C,GACT,IAAIqM,EAAI,IAAI4B,GAEZ,OADArL,EAAK+L,SAAS,IAAIC,KACXvC,EACJ/G,KAAK1C,GACLD,MAAK,SAACgC,GAEc,IAAfA,EAAIlC,OAENzC,EAAQ1E,KAAK,oBAGbsJ,MAAMD,EAAIE,YAGbC,OAAM,SAAC+J,GACNzU,QAAQK,MAAMoU,GACdjK,MAAM,uE,kCAGC,IAAD,OA6EV,MA5Ea,CACXkC,UAAW,WACXK,WAAY,qBACZF,SAAU,sBACVC,YAAa,kBACbF,eAAgB,SAAC6F,EAAa7M,GACd,EAAKyG,WAAWoG,IAG5B,EAAKvH,KAAKuH,EAAY/S,MAAM8I,KAAK5C,IAGrC8H,OAAQ,CACN,CACE9J,KAAM,eACNgG,YAAa,oDACbwD,MAAO,iCACPvH,KAAM,SACNmJ,QAAS7P,KAAKO,MAAMiQ,YACpBiD,UAAW,OACXC,WAAY,KACZ/I,UAAU,EACV6D,IAAK,WACLmB,SAAU,SAAC/R,EAAGsO,EAAKoH,GACjB,EAAKiC,aAAajC,KAGtB,CACE7O,KAAM,OACNgG,YAAa,iCACbwD,MAAO,8EACPvH,KAAM,SACN+H,IAAI,EACJ9D,UAAU,EACV6D,IAAK,WACLmB,SAAU,SAAC/R,EAAGsO,EAAKoH,GACjB,EAAKiC,aAAajC,KAGtB,CACE7O,KAAM,eACNgG,YAAa,iEACbwD,MAAO,iEACPvH,KAAM,QACNiE,UAAU,EACVwD,UAAU,EACVK,IAAK,YAEP,CACE/J,KAAM,aACNgG,YAAa,wCACbwD,MAAO,wCACPvH,KAAM,QACNiE,UAAU,EACVwD,UAAU,EACVK,IAAK,YAGP,CACE/J,KAAM,OACNgG,YAAa,6EACbwD,MAAO,6EACPvH,KAAM,OACNiE,UAAU,EACV6D,IAAK,YAEP,CACE/J,KAAM,cACNgG,YAAa,6CACbwD,MAAO,6CACPvH,KAAM,WACNiE,UAAU,EACV6D,IAAK,gB,+BAOX,IAAInB,EAASrN,KAAKyQ,YAClB,OACE,oCAEN,wBAAIpK,MAAOyK,GAAiBC,QAA5B,mKACM,yBAAK3L,UAAU,OAGb,kBAAC,EAAD,CAAaiI,OAAQA,U,GAjNc/H,aCF7BkQ,GAAgB,SAACC,EAAMd,EAASe,EAASrJ,EAAOsJ,GAEtDhB,EAASc,IACTd,EAASc,GAGb,IAAIG,EAAYH,EAAQd,GAAYc,EAAQd,EAAW,EAAI,EAAI,GAO/D,IADA,IAAIxI,EAAM,GACDzJ,EAAI,EAAGA,GAAKkT,EAAWlT,IAC9ByJ,EAAIpK,KAAKW,GAKX,OAAQ,6BACLyJ,EAAIhK,KAAI,SAAAO,GACL,OAAIA,GAAGgT,EAAS,EACL,4BAAQrP,MAAO,CAACoL,MAAM,QAAS7L,QAAS,WAE3CyG,EAAOsJ,GAAUhB,EAAUjS,EAAIiS,EAAU,KACzCjS,GAEG,4BAAQkD,QAAS,WAEpByG,EAAOsJ,GAAUhB,EAAUjS,EAAIiS,EAAU,KACzCjS,QC1BGmT,G,kDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDvV,MAAQ,CAACwV,KAAM,GAAIC,SAAU,EAAGC,SAAU,GAHjC,E,iEAQdjW,KAAKkW,WAAWlW,KAAKO,MAAMyV,SAAUhW,KAAKO,MAAM0V,Y,iCAIzCE,EAAKvB,GAAM,IAAD,OACjB5U,KAAKoW,wBAAwBD,EAAKvB,GAC7BxL,MAAK,SAACgC,GACe,GAAdA,EAAIlC,OAEJ,EAAK1E,SAAS,CACVuR,KAAM3K,EAAIjC,WAAYkN,MAAOjL,EAAIiL,MACjCL,SAAU5K,EAAI4K,SAAUC,SAAU7K,EAAI6K,WAI1C5K,MAAMD,EAAIE,YAGjBC,OAAM,SAAC3N,GACJiD,QAAQK,MAAMtD,GACdyN,MAAM,uE,8CAIM8K,EAAKvB,GAGzB,IAAIlC,EAAetU,EAAWC,mBAAsBD,EAAWC,mBAAmB4K,GAAK,KAGvF,OADQ,IAAIsJ,IACH+D,qBAAqB5D,GAA8B,GAAIyD,EAAMvB,K,+BAItE,OACI,6BACI,wBAAIvO,MAAOyK,GAAiBC,QAA5B,yEAEC3S,EAAWC,oBAAsBD,EAAWC,mBAAmB2K,MAChE,wBAAI3C,MAAO,CAAC2K,UAAU,UAAtB,4FAAoD5S,EAAWC,mBAAmB2K,MAElF,2BAAOuN,IAAI,MAAMnR,UAAU,uBAAuBiB,MAAO,CAACM,UAAW,QACjE,+BACA,4BACI,wDACA,iFACA,qEACA,8FACA,0GACA,qEACA,iFACA,0EACA,+BAGJ,+BACC3G,KAAKO,MAAMwV,MACZ/V,KAAKO,MAAMwV,KAAK5T,KAAI,SAAC+J,EAAKxJ,EAAGyJ,GACzB,OAAO,4BACH,4BAAKzJ,EAAI,GACT,4BAAKwJ,EAAIsK,WAAWxN,MACpB,4BAAKkD,EAAIuK,OAAOzN,KAAhB,IAAuBkD,EAAIuK,OAAOC,qBAAlC,KACA,4BAAKvO,EAAiB+D,EAAIsK,WAAWzG,cAArC,6BACA,4BAAK7D,EAAIqH,MACT,4BAAKpL,EAAiB+D,EAAIsH,YAA1B,6BACA,4BAAKtH,EAAIoI,UACT,4BAAKpI,EAAIsI,aACT,4BAEI,kBAAC,IAAD,CAAOhO,OAAQ,gBAAEC,EAAF,EAAEA,QAAF,OACV,4BAAQC,KAAK,SAASd,QAAS,WAC5BxH,EAAWG,wBAA0B2N,EACrCzF,EAAQ1E,KAAK,2BAFhB,0CAajB,4BACI,wBAAI4U,QAAQ,MACPnB,GAAiBxV,KAAKO,MAAM8V,MAAMrW,KAAKO,MAAMyV,SAAShW,KAAKO,MAAM0V,SAASjW,KAAK,yB,qCAWzFmW,EAAKvB,GAEhB5U,KAAKwE,SAAS,CAACyR,SAASrB,EAAKoB,SAASG,IACtCnW,KAAKkW,WAAWC,EAAKvB,O,GA7GoBtP,aCC5BsR,ICNwBtR,Y,kDDQzC,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IAEDxD,MAAM,CAACwV,KAAK,GAAGC,SAAS,EAAEC,SAAS,GAH1B,E,uDASPD,EAASC,GAAU,IAAD,OAC3BjW,KAAK6W,mBAAmBb,EAASC,GAChC7M,MAAK,SAACgC,GACa,GAAdA,EAAIlC,OAEN,EAAK1E,SAAS,CAAEuR,KAAM3K,EAAIjC,WAAWkN,MAAOjL,EAAIiL,MAC9CL,SAAU5K,EAAI4K,SAASC,SAAU7K,EAAI6K,WAGvC5K,MAAMD,EAAIE,YAGbC,OAAM,SAAC3N,GACNiD,QAAQK,MAAMtD,GACdyN,MAAM,uE,2CAIVrL,KAAKkW,WAAWlW,KAAKO,MAAMyV,SAAShW,KAAKO,MAAM0V,Y,qCAGlCE,EAAKvB,GAElB5U,KAAKwE,SAAS,CAACyR,SAASrB,EAAKoB,SAASG,IAEtCnW,KAAKkW,WAAWC,EAAKvB,K,yCAGJoB,EAASC,GAC1B,IAAKvD,EAAgBtU,EAAWC,mBAAqBD,EAAWC,mBAAmB4K,GAAK,KAKxF,OADQ,IAAIyL,IACHvJ,OAAQuH,EAAasD,EAASC,K,+BAGvC,OACE,6BACA,wBAAI5P,MAAOyK,GAAiBC,QAA5B,mEACK3S,EAAWC,oBAAsBD,EAAWC,mBAAmB2K,MAChE,wBAAI3C,MAAO,CAAC2K,UAAU,UAAtB,4FAAoD5S,EAAWC,mBAAmB2K,MACpF,2BAAO5D,UAAU,wBACf,+BACI,4BACI,wDACA,iFACA,8FACA,0GACA,qEACA,iFACA,0EACA,4GAGR,+BACGpF,KAAKO,MAAMwV,MACV/V,KAAKO,MAAMwV,KAAK5T,KAAI,SAAC+J,EAAKxJ,EAAGyJ,GAC3B,OAAO,4BACP,4BAAKzJ,EAAE,GACH,4BAAKwJ,EAAIsK,WAAWxN,MACpB,4BAAKb,EAAiB+D,EAAIsK,WAAWzG,cAArC,6BACA,4BAAK7D,EAAIqH,MACT,4BAAKpL,EAAiB+D,EAAIsH,YAA1B,6BACA,4BAAKtH,EAAI4K,MACT,4BAAK5K,EAAIsI,aACT,4BAAKtI,EAAI6K,gBAIf,4BACA,wBAAIJ,QAAQ,MAEXnB,GAAiBxV,KAAKO,MAAM8V,MAAMrW,KAAKO,MAAMyV,SAAShW,KAAKO,MAAM0V,SAASjW,KAAK,sBAStF,+C,GA7FuCsF,cENzC0R,GAAiBC,EAAQ,IAsNhBC,G,kDAjNX,WAAYnT,EAAOoT,GAAU,IAAD,8BACxB,cAAMpT,EAAOoT,IACR5W,MAAM,GAFa,E,gEAQxBP,KAAKwE,SAAS,CAAC4S,UAAU,oCACrBhZ,EAAWG,wBAAwB0K,IAEpCoO,YAAW,WACPC,OAAOC,UACT,O,+BASL,OAFA1W,QAAQC,IAAI1C,EAAWG,yBAElBH,EAAWG,wBAAwB0K,GAoBpC,yBAAK5C,MAAO,CAACC,WAAW,OAAOkR,aAAa,QACvCC,YAAY,UACZzX,KAAK0X,oBACL1X,KAAK0X,oBACL1X,KAAK0X,qBAvBH,oCACH,qQAEA,kBAAC,IAAD,CAAOlR,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACX,4BACIC,KAAK,SACLtB,UAAU,eACViB,MAAO,CAACM,UAAU,OAElBZ,cAAY,sBACZH,QAAS,WAAQa,EAAQ1E,KAAK,0BANlC,8E,0CA2BZ,OAAS,6BACL,0BAAM4V,IAAI,aAAajR,KAAK,WAAWV,KAAMhG,KAAKO,MAAM6W,YAExD,2BAAOhS,UAAU,6BAA8BiB,MAAO,CAACoJ,MAAM,OAAOnC,OAAO,OAAQiJ,IAAI,OACnF,+BACA,4BACI,wBAAII,QAAQ,MACR,2BAAG,oGAIX,4BACI,wBAAIA,QAAQ,IAAItQ,MAAO,CAACoJ,MAAM,OAC1B,2BAAG,uRAEP,wBAAIpJ,MAAO,CAACoJ,MAAM,OACd,iFAAerR,EAAWG,wBAAwB0K,GAAlD,QAGR,4BACI,wBAAI7D,UAAU,UAAWiB,MAAO,CAACoJ,MAAM,OACnC,2BAAG,uJAAH,sCAEJ,wBAAIpJ,MAAO,CAACoJ,MAAM,OACd,gEAEJ,wBAAIpJ,MAAO,CAACoJ,MAAM,OACd,2BAAIrR,EAAWG,wBAAwBwY,cAG/C,4BACI,wBAAI1Q,MAAO,CAACoJ,MAAM,OACd,2BAAG,wWAEP,wBAAKpJ,MAAO,CAACoJ,MAAM,OACf,gEAEJ,wBAAIpJ,MAAO,CAACoJ,MAAM,OACd,2BAAIrR,EAAWG,wBAAwB+V,YAG/C,4BACI,wBAAIjO,MAAO,CAACoJ,MAAM,MAAOrK,UAAU,WAC/B,0EAAkBhH,EAAWG,wBAAwBkY,OAAOzN,KAA5D,IAAmE5K,EAAWG,wBAAwBkY,OAAOC,uBAEjH,wBAAIrQ,MAAO,CAACoJ,MAAM,OACd,kFAAgBrR,EAAWG,wBAAwBgO,WAEvD,wBAAIlG,MAAO,CAACoJ,MAAM,OACd,sIAGR,4BACI,wBAAIkH,QAAQ,IAAItQ,MAAO,CAACoJ,MAAM,QAC1B,2BAAQpJ,MAAO,CAACoJ,MAAM,QAAS8G,IAAI,OAC/B,+BACA,4BACI,wBAAIlQ,MAAO,CAACoJ,MAAM,MACd,wDAEJ,wBAAIpJ,MAAO,CAACoJ,MAAM,OACd,2BAAG,wDAEP,wBAAIkH,QAAQ,IAAItQ,MAAO,CAACoJ,MAAM,OAC1B,2BAAG,gHAEP,wBAAIpJ,MAAO,CAACoJ,MAAM,OACd,2BAAG,uFAEP,wBAAIpJ,MAAO,CAACoJ,MAAM,OACd,2BAAG,4EAGX,4BACI,wBAAIpJ,MAAO,CAACoJ,MAAM,MACd,iCAEJ,wBAAIpJ,MAAO,CAACoJ,MAAM,OACd,2BAAIrR,EAAWG,wBAAwBiW,cAE3C,wBAAImC,QAAQ,IAAItQ,MAAO,CAACoJ,MAAM,OAC1B,iCAAOrR,EAAWG,wBAAwBgV,KAA1C,qDAEJ,wBAAIlN,MAAO,CAACoJ,MAAM,OACd,iCAAOtH,EAAiB/J,EAAWG,wBAAwBiY,WAAWzG,cAAtE,iCAEJ,wBAAI1J,MAAO,CAACoJ,MAAM,OACd,gCAAMtH,EAAiB/J,EAAWG,wBAAwBiV,YAA1D,oCAqCR,4BACI,wBAAImD,QAAQ,KAAKvR,UAAU,UAAUiB,MAAO,CAACoJ,MAAM,OAC/C,2BAAG,8FAEEuH,GAAeY,QAAQxZ,EAAWG,wBAAwBiV,YAF/D,kCAMR,4BACI,wBAAImD,QAAQ,IAAItQ,MAAO,CAACoJ,MAAM,OAC1B,2BAAG,uHAEP,wBAAIkH,QAAQ,IAAItQ,MAAO,CAACoJ,MAAM,OAC1B,2BAAG,gGAYtC,kC,GA9MkCnK,aCItBtG,GAAb,kDACI,WAAY+E,GAAQ,IAAD,8BACf,cAAMA,IAEDxD,MAAQ,CACTU,aAASO,GAJE,EADvB,gEAUQ,IAAMqW,EAAS7X,KAAK+D,MAAM8T,OAC1B,OAAQA,GACJ,KAAKnZ,EACDsB,KAAK8X,MAAM9X,KAAK+X,gBAChB,MACJ,KAAKrZ,EACDsB,KAAKgY,uBACL,MACJ,KAAKtZ,EACD,IACMwC,EADS,IAAI+W,gBAAgBX,OAAOY,SAASC,QAC9BC,IAAI5Z,GACzBwB,KAAKwE,SAAS,CAAEvD,QAASC,IACzB,MACJ,KAAKxC,EACDsB,KAAKqY,oBACL,MACJ,KAAK3Z,EACDsB,KAAKsY,qBACL,MACJ,QACI,MAAM,IAAIza,MAAJ,0BAA6Bga,EAA7B,SA9BtB,+BAmCQ,IAAMA,EAAS7X,KAAK+D,MAAM8T,OAClB5W,EAAYjB,KAAKO,MAAjBU,QAER,GAAMA,EACF,OAAO,6BAAMA,GAEb,OAAQ4W,GACJ,KAAKnZ,EACD,OAAQ,iDACZ,KAAKA,EACD,OAAQ,0DACZ,KAAKA,EACL,KAAKA,EACD,OAAQ,8BACZ,QACI,MAAM,IAAIb,MAAJ,0BAA6Bga,EAA7B,SAlD1B,qEAuDgBU,GAvDhB,gFAwDchY,EAAQ,CAAEgY,aAxDxB,SAyD6B7Y,EAAY8Y,OAAOjY,GAzDhD,OAyDc4O,EAzDd,YA0DgBA,EAAOvM,OA1DvB,cA2DiBC,EAA2BG,SA3D5C,SA6DiBH,EAA2BE,QA7D5C,SAgEiBF,EAA2BC,KAhE5C,uEA8DsB9C,KAAKyY,oBAAoBF,GA9D/C,mDAiEgBvY,KAAKwE,SAAS,CAAEvD,QAASkO,EAAOlO,UAjEhD,mCAoEsB,IAAIpD,MAAJ,gCAAmCsR,EAAOvM,OAA1C,MApEtB,8QAyEcvB,EAAMiW,OAAOY,SAASlS,KAzEpC,SA0E6BtG,EAAYgZ,eAAerX,GA1ExD,OA0Ec8N,EA1Ed,YA2EgBA,EAAOvM,OA3EvB,cA4EiBC,EAA2BG,SA5E5C,SAgFiBH,EAA2BE,QAhF5C,SAmFiBF,EAA2BC,KAnF5C,yBA+EsB,IAAIjF,MAAM,wBA/EhC,wBAiFsBmC,KAAKyY,oBAAoBzY,KAAK+X,aAAa5I,EAAO5O,QAjFxE,mDAoFgBP,KAAKwE,SAAS,CAAEvD,QAASkO,EAAOlO,UApFhD,mCAuFsB,IAAIpD,MAAJ,gDAAmDsR,EAAOvM,OAA1D,OAvFtB,0IA2FiBrC,GACT,IACMoY,EADS,IAAIV,gBAAgBX,OAAOY,SAASC,QAC1BC,IAAI5Z,GAC7B,GAAIma,IAAcA,EAAUC,WAAV,UAAwBtB,OAAOY,SAASW,OAAxC,MAEd,MAAM,IAAIhb,MAAM,yFAEpB,OAAQ0C,GAASA,EAAMgY,WAAcI,GAA9B,UAA8CrB,OAAOY,SAASW,OAA9D,OAlGf,2CAsGQ7Y,KAAK8Y,+BAAL,UAAuCla,EAAiBY,qBAAxD,YAAgFhB,EAAhF,YAAiHua,UAAUna,EAAiBI,WAtGpJ,0CA0GQgB,KAAK8Y,+BAA+Bla,EAAiBa,sBA1G7D,qDA6GmCuZ,GAC3B,IAAMC,EAAW,UAAM3B,OAAOY,SAASW,QAAtB,OAA+BG,GAIhD1B,OAAOY,SAAS1P,QAAQyQ,KAlHhC,0CAqHwBV,GAGhBjB,OAAOY,SAAS1P,QAAQ+P,OAxHhC,GAA2BjT,aCDd4T,GAAb,kDACI,WAAYnV,GAAQ,IAAD,8BACf,cAAMA,IAEDxD,MAAQ,CACTU,aAASO,EACT2X,SAAS,EACTC,eAAe,GANJ,EADvB,gEAYQ,IAAMvB,EAAS7X,KAAK+D,MAAM8T,OAC1B,OAAQA,GACJ,KAAKpZ,EACDuB,KAAKqZ,OAAOrZ,KAAK+X,gBAOjB,MACJ,KAAKtZ,EACDuB,KAAKsZ,wBACL,MACJ,KAAK7a,EACDuB,KAAKwE,SAAS,CAAE2U,SAAS,EAAMlY,QAAS,oJAExCoW,YAAW,WACPC,OAAOY,SAAS,MAElB,KACF,MACJ,QACI,MAAM,IAAIra,MAAJ,0BAA6Bga,EAA7B,MAGd7X,KAAKuZ,gCAtCb,+BAyCc,IAAD,EACwBvZ,KAAKO,MAA1B4Y,EADH,EACGA,QAASlY,EADZ,EACYA,QACjB,IAAKkY,EACD,OAAO,8BAEX,GAAMlY,EACF,OAAQ,6BAAMA,GAEd,IAAM4W,EAAS7X,KAAK+D,MAAM8T,OAC1B,OAAQA,GACJ,KAAKpZ,EACD,OAAQ,qIACZ,KAAKA,EACD,OAAQ,2DACZ,KAAKA,EACD,OAAQ,6BAAMwC,GAClB,QACI,MAAM,IAAIpD,MAAJ,0BAA6Bga,EAA7B,SA1D1B,sEA+DiBU,GA/DjB,gFAgEchY,EAAQ,CAAEgY,aAhExB,SAiEsC7Y,EAAYsE,kBAjElD,mDAmEiCtE,EAAY8Z,QAAQjZ,GAnErD,OAmEkB4O,EAnElB,YAoEoBA,EAAOvM,OApE3B,cAqEqBC,EAA2BG,SArEhD,UAuEqBH,EAA2BE,QAvEhD,UA0EqBF,EAA2BC,KA1EhD,yEAwE0B9C,KAAKyY,oBAAoBF,GAxEnD,mDA2EoBvY,KAAKwE,SAAS,CAAEvD,QAASkO,EAAOlO,UA3EpD,mCA8E0B,IAAIpD,MAAM,yCA9EpC,gCAiFYmC,KAAKwE,SAAS,CAAEvD,QAAS,sJAjFrC,+QA0FcI,EAAMiW,OAAOY,SAASlS,KA1FpC,SA2F6BtG,EAAY+Z,gBAAgBpY,GA3FzD,OA2Fc8N,EA3Fd,YA4FgBA,EAAOvM,OA5FvB,cA6FiBC,EAA2BG,SA7F5C,SAiGiBH,EAA2BE,QAjG5C,SAoGiBF,EAA2BC,KApG5C,yBAgGsB,IAAIjF,MAAM,wBAhGhC,wBAkGsBmC,KAAKyY,oBAAoBzY,KAAK+X,aAAa5I,EAAO5O,QAlGxE,mDAqGgBP,KAAKwE,SAAS,CAAEvD,QAASkO,EAAOlO,UArGhD,mCAwGsB,IAAIpD,MAAM,yCAxGhC,2RA6GoC6B,EAAYsE,kBA7GhD,OA6GcoV,EA7Gd,OA8GQpZ,KAAKwE,SAAS,CAAE2U,SAAS,EAAMC,kBA9GvC,yIAiHiB7Y,GACT,IACMoY,EADS,IAAIV,gBAAgBX,OAAOY,SAASC,QAC1BC,IAAI5Z,GAC7B,GAAIma,IAAcA,EAAUC,WAAV,UAAwBtB,OAAOY,SAASW,OAAxC,MAEd,MAAM,IAAIhb,MAAM,yFAEpB,OAAQ0C,GAASA,EAAMgY,WACnBI,GADG,UAEArB,OAAOY,SAASW,QAFhB,OAEyBja,EAAiBU,aA1HzD,0CA6HwBiZ,GAChB,OAAOjB,OAAOY,SAAS1P,QAAQ+P,OA9HvC,GAA4BjT,aCHPoU,G,uKAGjB,OACE,kBAAC,WAAD,KACI,kBAACtN,EAAA,EAAD,CAAOuN,KAAM/a,EAAiBI,MAAOwH,OAAQ,kBAAMoT,GAAYlb,MAC/D,kBAAC0N,EAAA,EAAD,CAAOuN,KAAM/a,EAAiBK,YAAauH,OAAQ,kBAAMoT,GAAYlb,MACrE,kBAAC0N,EAAA,EAAD,CAAOuN,KAAM/a,EAAiBM,cAAesH,OAAQ,kBAAMoT,GAAYlb,MACvE,kBAAC0N,EAAA,EAAD,CAAOuN,KAAM/a,EAAiBQ,QAASoH,OAAQ,kBAAMoT,GAAYlb,MACjE,kBAAC0N,EAAA,EAAD,CAAOuN,KAAM/a,EAAiBO,SAAUqH,OAAQ,kBAAMoT,GAAYlb,MAClE,kBAAC0N,EAAA,EAAD,CAAOuN,KAAM/a,EAAiBS,OAAQmH,OAAQ,kBAAMqT,GAAapb,MACjE,kBAAC2N,EAAA,EAAD,CAAOuN,KAAM/a,EAAiBW,eAAgBiH,OAAQ,kBAAMqT,GAAapb,MACzE,kBAAC2N,EAAA,EAAD,CAAOuN,KAAM/a,EAAiBU,UAAWkH,OAAQ,kBAAMqT,GAAapb,W,GAZ1B6G,aAiBpD,SAASsU,GAAYnV,GACjB,OAAQ,kBAAC,GAAD,CAAOoT,OAAQpT,IAG3B,SAASoV,GAAapV,GAClB,OAAQ,kBAAC,GAAD,CAAQoT,OAAQpT,I,sBCtBPqV,G,kDACjB,WAAY/V,GAAQ,IAAD,8BACf,cAAMA,IAEDxD,MAAQ,CACTwZ,OAAO,EACPX,eAAe,GALJ,E,gEASE,IAAD,OAChBpZ,KAAKkE,cAAgBxE,EAAYyE,WAAU,kBAAM,EAAK6V,2BACtDha,KAAKuZ,gC,6CAIL7Z,EAAY2E,YAAYrE,KAAKkE,iB,+BAGvB,IAAD,EAC4BlE,KAAKO,MAA9BwZ,EADH,EACGA,MAAOX,EADV,EACUA,cACXa,EAAOrN,SAASsN,cAAc,KAClCD,EAAKjU,KAAOhG,KAAK+D,MAAM4V,KACvB,IAAMpB,EAAS,UAAM0B,EAAKE,SAAX,aAAwBF,EAAKG,MAA7B,OAAoCH,EAAKrV,UAAzC,OAAoDqV,EAAK9B,QAAzD,OAAkE8B,EAAKI,MAChFpB,EAAW,UAAMra,EAAiBI,MAAvB,YAAgCR,EAAhC,YAAiEua,UAAUR,IAC5F,GAAKwB,EAEE,CAAC,IAAD,EACuC/Z,KAAK+D,MAA5BuB,EADhB,EACKgV,UAAyBC,EAD9B,8BAEH,OAAO,kBAAC,IAAD,iBAAWA,EAAX,CACH/T,OAAQ,SAACzC,GACL,OAAIqV,EACO,kBAAC,EAAcrV,GAEf,kBAACf,GAAA,EAAD,CAAUqC,GAAI4T,QARjC,OAAO,gC,oLAeiBvZ,EAAYsE,kB,OAAlCoV,E,OACNpZ,KAAKwE,SAAS,CAAEuV,OAAO,EAAMX,kB,qQAI7BpZ,KAAKwE,SAAS,CAAEuV,OAAO,EAAOX,eAAe,I,SACvCpZ,KAAKuZ,8B,2GA/CyBjU,aCmBvBkV,G,uKAIjB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAgBC,OAAK,EAACd,KAAK,IAAIW,UAAWnU,IAC1C,kBAAC,GAAD,CAAgBwT,KAAK,WAAWW,UAAWrS,IAC3C,kBAAC,GAAD,CAAgB0R,KAAK,kBAAkBW,UAAWrK,KAClD,kBAAC,GAAD,CAAgB0J,KAAK,eAAeW,UAAWlG,KAC/C,kBAAC,GAAD,CAAgBuF,KAAK,iBAAiBW,UAAWvF,KACjD,kBAAC,GAAD,CAAgB4E,KAAK,mBAAmBW,UAAWnG,KACnD,kBAAC,GAAD,CAAgBwF,KAAK,uBAAuBW,UAAWzE,KACvD,kBAAC,GAAD,CAAgB8D,KAAK,qBAAqBW,UAAW1D,KACrD,kBAAC,GAAD,CAAgB+C,KAAK,mBAAmBW,UAAWrJ,KACjD,kBAAC,GAAD,CAAgB0I,KAAK,mBAAmBW,UAAW9E,KACnD,kBAAC,GAAD,CAAgBmE,KAAK,wBAAwBW,UAAWpD,KAEpD,kBAAC9K,EAAA,EAAD,CAAOuN,KAAM/a,EAAiBG,uBAAwBub,UAAWZ,U,GAlB9CpU,aAAZkV,GACZtU,YAAcsU,GAAI/V,KChB3B,IAAMiW,GAAcC,QACW,cAA7BrD,OAAOY,SAAS0C,UAEa,UAA7BtD,OAAOY,SAAS0C,UAEhBtD,OAAOY,SAAS0C,SAASC,MACvB,2DA6BJ,SAASC,GAAiBC,GACxBC,UAAUC,cACPC,SAASH,GACT3R,MAAK,SAAA+R,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9a,QACfya,UAAUC,cAAcO,WAK1B3a,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrByK,OAAM,SAAArK,GACLL,QAAQK,MAAM,4CAA6CA,MC/DjE,IAAMua,GAAU7O,SAAS8O,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,GAAchP,SAASC,eAAe,QAE5CgP,IAASrV,OACP,kBAACsV,EAAA,EAAD,CAAeC,SAAUN,IACvB,kBAAC,GAAD,OAEFG,IDMa,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,GAAwB3E,OAAOY,UAC3CW,SAAWvB,OAAOY,SAASW,OAIvC,OAGFvB,OAAO4E,iBAAiB,QAAQ,WAC9B,IAAMnB,EAAK,UAAMkB,GAAN,sBAEPvB,GAwCV,SAAkCK,GAEhC9X,MAAM8X,GACH3R,MAAK,SAAAzH,GAGkB,MAApBA,EAASiB,SACuD,IAAhEjB,EAAS6H,QAAQ4O,IAAI,gBAAgB+D,QAAQ,cAG7CnB,UAAUC,cAAclB,MAAM3Q,MAAK,SAAA+R,GACjCA,EAAaiB,aAAahT,MAAK,WAC7BkO,OAAOY,SAASmE,eAKpBvB,GAAgBC,MAGnBxP,OAAM,WACL1K,QAAQC,IACN,oEA5DAwb,CAAwBvB,GAGxBD,GAAgBC,OCvBxBwB,K","file":"static/js/main.137575f4.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 26;","\r\n\r\nexport const DataHolder={\r\n\r\n    selectedAnimalFood:{},\r\n    selectedPerson:{},\r\n    selectedIssueAssignment:{}\r\n}","export const ApplicationName = 'KhInventoryAuth';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: 'returnUrl',\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nconst prefix = '/authentication';\r\n\r\nexport const ApplicationPaths = {\r\n  DefaultLoginRedirectPath: '/',\r\n  ApiAuthorizationClientConfigurationUrl: `/_configuration/${ApplicationName}`,\r\n  ApiAuthorizationPrefix: prefix,\r\n  Login: `${prefix}/${LoginActions.Login}`,\r\n  LoginFailed: `${prefix}/${LoginActions.LoginFailed}`,\r\n  LoginCallback: `${prefix}/${LoginActions.LoginCallback}`,\r\n  Register: `${prefix}/${LoginActions.Register}`,\r\n  Profile: `${prefix}/${LoginActions.Profile}`,\r\n  LogOut: `${prefix}/${LogoutActions.Logout}`,\r\n  LoggedOut: `${prefix}/${LogoutActions.LoggedOut}`,\r\n  LogOutCallback: `${prefix}/${LogoutActions.LogoutCallback}`,\r\n  IdentityRegisterPath: '/Identity/Account/Register',\r\n  IdentityManagePath: '/Identity/Account/Manage'\r\n};\r\n","import { UserManager, WebStorageStateStore } from 'oidc-client';\r\nimport { ApplicationPaths, ApplicationName } from './ApiAuthorizationConstants';\r\n\r\nexport class AuthorizeService {\r\n    _callbacks = [];\r\n    _nextSubscriptionId = 0;\r\n    _user = null;\r\n    _isAuthenticated = false;\r\n\r\n    // By default pop ups are disabled because they don't work properly on Edge.\r\n    // If you want to enable pop up authentication simply set this flag to false.\r\n    _popUpDisabled = true;\r\n\r\n    async isAuthenticated() {\r\n        const user = await this.getUser();\r\n        return !!user;\r\n    }\r\n\r\n    async getUser() {\r\n        if (this._user && this._user.profile) {\r\n            return this._user.profile;\r\n        }\r\n\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.profile;\r\n    }\r\n\r\n    async getAccessToken() {\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.access_token;\r\n    }\r\n\r\n    // We try to authenticate the user in three different ways:\r\n    // 1) We try to see if we can authenticate the user silently. This happens\r\n    //    when the user is already logged in on the IdP and is done using a hidden iframe\r\n    //    on the client.\r\n    // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\r\n    //    redirect flow.\r\n    async signIn(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const silentUser = await this.userManager.signinSilent(this.createArguments());\r\n            this.updateState(silentUser);\r\n            return this.success(state);\r\n        } catch (silentError) {\r\n            // User might not be authenticated, fallback to popup authentication\r\n            console.log(\"Silent authentication error: \", silentError);\r\n\r\n            try {\r\n                if (this._popUpDisabled) {\r\n                    throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n                }\r\n\r\n                const popUpUser = await this.userManager.signinPopup(this.createArguments());\r\n                this.updateState(popUpUser);\r\n                return this.success(state);\r\n            } catch (popUpError) {\r\n                if (popUpError.message === \"Popup window closed\") {\r\n                    // The user explicitly cancelled the login action by closing an opened popup.\r\n                    return this.error(\"The user closed the window.\");\r\n                } else if (!this._popUpDisabled) {\r\n                    console.log(\"Popup authentication error: \", popUpError);\r\n                }\r\n\r\n                // PopUps might be blocked by the user, fallback to redirect\r\n                try {\r\n                    await this.userManager.signinRedirect(this.createArguments(state));\r\n                    return this.redirect();\r\n                } catch (redirectError) {\r\n                    console.log(\"Redirect authentication error: \", redirectError);\r\n                    return this.error(redirectError);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignIn(url) {\r\n        try {\r\n            await this.ensureUserManagerInitialized();\r\n            const user = await this.userManager.signinCallback(url);\r\n            this.updateState(user);\r\n            return this.success(user && user.state);\r\n        } catch (error) {\r\n            console.log('There was an error signing in: ', error);\r\n            return this.error('There was an error signing in.');\r\n        }\r\n    }\r\n\r\n    // We try to sign out the user in two different ways:\r\n    // 1) We try to do a sign-out using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 2) If the method above fails, we redirect the browser to the IdP to perform a traditional\r\n    //    post logout redirect flow.\r\n    async signOut(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            if (this._popUpDisabled) {\r\n                throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n            }\r\n\r\n            await this.userManager.signoutPopup(this.createArguments());\r\n            this.updateState(undefined);\r\n            return this.success(state);\r\n        } catch (popupSignOutError) {\r\n            console.log(\"Popup signout error: \", popupSignOutError);\r\n            try {\r\n                await this.userManager.signoutRedirect(this.createArguments(state));\r\n                return this.redirect();\r\n            } catch (redirectSignOutError) {\r\n                console.log(\"Redirect signout error: \", redirectSignOutError);\r\n                return this.error(redirectSignOutError);\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignOut(url) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const response = await this.userManager.signoutCallback(url);\r\n            this.updateState(null);\r\n            return this.success(response && response.data);\r\n        } catch (error) {\r\n            console.log(`There was an error trying to log out '${error}'.`);\r\n            return this.error(error);\r\n        }\r\n    }\r\n\r\n    updateState(user) {\r\n        this._user = user;\r\n        this._isAuthenticated = !!this._user;\r\n        this.notifySubscribers();\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this._callbacks.push({ callback, subscription: this._nextSubscriptionId++ });\r\n        return this._nextSubscriptionId - 1;\r\n    }\r\n\r\n    unsubscribe(subscriptionId) {\r\n        const subscriptionIndex = this._callbacks\r\n            .map((element, index) => element.subscription === subscriptionId ? { found: true, index } : { found: false })\r\n            .filter(element => element.found === true);\r\n        if (subscriptionIndex.length !== 1) {\r\n            throw new Error(`Found an invalid number of subscriptions ${subscriptionIndex.length}`);\r\n        }\r\n\r\n        this._callbacks.splice(subscriptionIndex[0].index, 1);\r\n    }\r\n\r\n    notifySubscribers() {\r\n        for (let i = 0; i < this._callbacks.length; i++) {\r\n            const callback = this._callbacks[i].callback;\r\n            callback();\r\n        }\r\n    }\r\n\r\n    createArguments(state) {\r\n        return { useReplaceToNavigate: true, data: state };\r\n    }\r\n\r\n    error(message) {\r\n        return { status: AuthenticationResultStatus.Fail, message };\r\n    }\r\n\r\n    success(state) {\r\n        return { status: AuthenticationResultStatus.Success, state };\r\n    }\r\n\r\n    redirect() {\r\n        return { status: AuthenticationResultStatus.Redirect };\r\n    }\r\n\r\n    async ensureUserManagerInitialized() {\r\n        if (this.userManager !== undefined) {\r\n            return;\r\n        }\r\n\r\n        let response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\r\n        if (!response.ok) {\r\n            throw new Error(`Could not load settings for '${ApplicationName}'`);\r\n        }\r\n\r\n        let settings = await response.json();\r\n        settings.automaticSilentRenew = true;\r\n        settings.includeIdTokenInSilentRenew = true;\r\n        settings.userStore = new WebStorageStateStore({\r\n            prefix: ApplicationName\r\n        });\r\n\r\n        this.userManager = new UserManager(settings);\r\n\r\n        this.userManager.events.addUserSignedOut(async () => {\r\n            await this.userManager.removeUser();\r\n            this.updateState(undefined);\r\n        });\r\n    }\r\n\r\n    static get instance() { return authService }\r\n}\r\n\r\nconst authService = new AuthorizeService();\r\n\r\nexport default authService;\r\n\r\nexport const AuthenticationResultStatus = {\r\n    Redirect: 'redirect',\r\n    Success: 'success',\r\n    Fail: 'fail'\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from './AuthorizeService';\r\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\nexport class LoginMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            userName: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.populateState());\r\n        this.populateState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    async populateState() {\r\n        const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\r\n        this.setState({\r\n            isAuthenticated,\r\n            userName: user && user.name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, userName } = this.state;\r\n        if (!isAuthenticated) {\r\n            const registerPath = `${ApplicationPaths.Register}`;\r\n            const loginPath = `${ApplicationPaths.Login}`;\r\n            return this.anonymousView(registerPath, loginPath);\r\n        } else {\r\n            const profilePath = `${ApplicationPaths.Profile}`;\r\n            const logoutPath = { pathname: `${ApplicationPaths.LogOut}`, state: { local: true } };\r\n            return this.authenticatedView(userName, profilePath, logoutPath);\r\n        }\r\n    }\r\n\r\n    authenticatedView(userName, profilePath, logoutPath) {\r\n        return (<Fragment>\r\n         {/*   <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={profilePath}>Hello {userName}</NavLink>\r\n            </NavItem>*/}\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={logoutPath}>خروج از سیستم</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n\r\n    }\r\n\r\n    anonymousView(registerPath, loginPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={registerPath}>Register</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={loginPath}>Login</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Container,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport \"./NavMenu.css\";\r\nimport {DataHolder} from \"../service/DateHolder\";\r\nimport {LoginMenu} from \"./api-authorization/LoginMenu\";\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true,\r\n    };\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <Navbar\r\n          className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\"\r\n          light\r\n        >\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">\r\n              انبار\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse\r\n              className=\"d-sm-inline-flex flex-sm-row-reverse\"\r\n              isOpen={!this.state.collapsed}\r\n              navbar\r\n            >\r\n              <ul className=\"navbar-nav flex-grow\">\r\n               \r\n                <NavItem>\r\n<LoginMenu/>\r\n                  \r\n                 \r\n                </NavItem>\r\n                \r\n                <NavItem>\r\n                <NavLink\r\n                    data-testid=\"IssueAssignmentList\"\r\n                    tag={Link}\r\n                    className=\"text-dark\"\r\n                    to=\"/IssueAssignmentList\"\r\n                    onClick={()=>{\r\n                      DataHolder.selectedAnimalFood=null;\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    لیست حواله ها\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                \r\n                <li className=\"nav-item\">\r\n                  <a className=\"text-dark nav-link\" href=\"/Dashboard/index\" target='_blank'>لیست توزیع</a>\r\n                </li>\r\n               {/* <NavItem>\r\n                  <NavLink\r\n                    data-testid=\"\"\r\n                    tag={Link}\r\n                    className=\"text-dark\"\r\n                    to=\"/Dashboard/index\"\r\n                    onClick={()=>{\r\n                      window.location.href=\"/Dashboard/index\";\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    لیست توزیع\r\n                  </NavLink>\r\n                </NavItem>*/}\r\n\r\n                <NavItem>\r\n                  <NavLink\r\n                    data-testid=\"BuyAnimalFoodList\"\r\n                    tag={Link}\r\n                    className=\"text-dark\"\r\n                    to=\"/BuyAnimalFoodList\"\r\n                    \r\n                    onClick={()=>{\r\n                      DataHolder.selectedAnimalFood=null;                      \r\n                    }}\r\n                  >\r\n                    \r\n                    {\" \"}\r\n                    لیست خرید نهاده{\" \"}\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink\r\n                    data-testid=\"InventoryStatus\"\r\n                    tag={Link}\r\n                    className=\"text-dark\"\r\n                    to=\"/InventoryStatus\"\r\n                  >\r\n                    وضعیت انبار\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                \r\n                <NavItem>\r\n                  <NavLink\r\n                    data-testid=\"animalFoods\"\r\n                    tag={Link}\r\n                    className=\"text-dark\"\r\n                    to=\"/AnimalFoodPage\"\r\n                  >\r\n                    نهاده ها\r\n                  </NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Route } from 'react-router-dom';\r\n\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n\r\n  issueAssignmentProcess(){\r\n    \r\n  }\r\n  render () {\r\n    return (\r\n      <div >\r\n      \r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class MyNavMenu extends Component {\r\n  static displayName = Home.name;\r\n\r\n\r\n  issueAssignmentProcess(){\r\n    \r\n  }\r\n  render () {\r\n    return (\r\n      <div className='mynav' style={{paddingTop:'20px',paddingBottom:'20px'}}>\r\n      \r\n\r\n       <Route render={({ history}) => (\r\n    <button\r\n      type='button'\r\n      className=\"btn btn-info\"\r\n      style={{direction:'rtl'}}\r\n      \r\n      data-testid=\"IssueAssignment\"\r\n      onClick={() => { history.push('/IssueAssignment') }}\r\n    >\r\n        صدور حواله (خروج از انبار)\r\n    </button> \r\n  )} />\r\n\r\n<Route render={({ history}) => (\r\n    <button\r\n    style={{direction:'rtl',float:'right'}}\r\n      type='button'\r\n      className=\"btn btn-info\"\r\n      data-testid=\"BuyAnimalFood\"\r\n      onClick={() => { history.push('/BuyAnimalFood') }}\r\n    >\r\n      خرید (ورود کالا به انبار)\r\n    </button>\r\n  )} />\r\n\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\nimport { Home, MyNavMenu } from './Home';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n        <MyNavMenu/>\r\n          {this.props.children}\r\n\r\n\r\n<div style={{marginTop:'150px'}}></div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n \r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport default class SettingPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                صفحه تنظیمات\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nexport const MyGlobal={\r\n    IsDebugEnvirement:false\r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    var parts = x.toString().split(\",\");\r\n    parts[0]=parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\");\r\n    return parts.join(\",\");\r\n    }","\r\nimport { MyGlobal } from './Models';\r\n\r\nexport class PersonService{\r\n    getAll(searchTerm){\r\n\r\n        if(!searchTerm){\r\n            searchTerm='';\r\n        }\r\n\r\n        if (MyGlobal.IsDebugEnvirement) {\r\n            return this.getAllDebug();\r\n        }\r\n        return this.getAllReal(searchTerm);\r\n\r\n    }\r\n    getAllDebug(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n               \r\n   \r\n           let array=[];\r\n   \r\n           array.push({Name:'محمد سلامی',Id:1});\r\n           array.push({Name:'عباس ایرانی',Id:2});\r\n           array.push({Name:'سعید نامجو مطلق',Id:3});\r\n           \r\n   \r\n           resolve({Status:1,EntityList:array});\r\n           })\r\n           \r\n       }\r\n   \r\n       getAllReal(searchTerm){\r\n           return fetch('/Person/Search?searchTerm='+searchTerm)\r\n               .then(response => response.json());\r\n       }\r\n\r\n\r\n       save(form){\r\n        debugger;\r\n\r\n        // Simple POST request with a JSON body using fetch\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(form)\r\n        };\r\n      return  fetch('/Person', requestOptions)\r\n            .then(response => response.json());\r\n       }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { showValidInvalidMsg } from \"./IssueAssignment/SelectPerson\";\r\n\r\nexport default class QuickNewPersonForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { person: {MilliCode:this.props.MilliCode}, miliCodeIsValid: false };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event, valName) {\r\n    this.state.person[valName] = event.target.value;\r\n\r\n    if (!event.target.value || event.target.value.length !== 10) {\r\n        this.state.person[valName+\"IsValid\"]=false;\r\n    } else {\r\n        this.state.person[valName+\"IsValid\"]=false;\r\n    }\r\n    this.setState({ rdm: Math.random() });\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"form-row\">\r\n          <div class=\"col-md-4 mb-3\">\r\n            <label for=\"validationServer01\">نام و نام خانوادگی</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control is-valid\"\r\n              id=\"validationServer01\"\r\n              placeholder=\"نام و نام خانوادگی\"\r\n              onChange={(e)=>{\r\n                  this.handleChange(e,'Name')\r\n              }}\r\n              value={this.state.person.Name}\r\n              required\r\n            />\r\n\r\n            {showValidInvalidMsg()}\r\n          </div>\r\n          <div class=\"col-md-4 mb-3\">\r\n            <label for=\"validationServer02\">کد ملی </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control is-valid\"\r\n              id=\"validationServer02\"\r\n              placeholder=\"کد ملی\"\r\n              onChange={(e)=>{\r\n                  this.handleChange(e,'MilliCode')\r\n              }}\r\n              value={this.state.person.MilliCode}\r\n              required\r\n            />\r\n            {showValidInvalidMsg()}\r\n\r\n          </div>\r\n          <div class=\"col-md-4 mb-3\">\r\n            <label for=\"validationServer02\">شماره موبایل</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control is-valid\"\r\n              id=\"validationServer02\"\r\n              placeholder=\"شماره موبایل\"\r\n              onChange={(e)=>{\r\n                  this.handleChange(e,'Mobile')\r\n              }}\r\n              value={this.state.person.Mobile}              required\r\n            />\r\n            {showValidInvalidMsg()}\r\n          </div>\r\n        </div>\r\n        <button onClick={()=>{\r\n\r\n            if(this.props.saveCallback){\r\n                this.props.saveCallback(this.state.person);\r\n            }\r\n        }}>شخص جدید</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { PersonService } from \"./../../service/PersonService\";\r\nimport { Route } from \"react-router\";\r\nimport QuickNewPersonForm from \"./../QuickNewPersonForm\";\r\nimport { DataHolder } from \"./../../service/DateHolder\";\r\nimport { MyGlobal } from \"./../../service/Models\";\r\n\r\nexport default class SelectPerson extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { persons: [], value: \"\", miliCodeIsValid: false };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  componentWillMount() {\r\n      this.refreshPersons('');\r\n\r\n  }\r\n\r\n    refreshPersons(vl) {\r\n    let s = new PersonService();\r\n\r\n    s.getAll(vl)\r\n      .then((res) => {\r\n        if (res.Status == 1) {\r\n          this.setState({ persons: res.EntityList });\r\n        } else {\r\n          alert(res.Message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        alert(\"خطا در سیستم\");\r\n      });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n\r\n    if (!event.target.value || event.target.value.length !== 10) {\r\n      this.setState({ miliCodeIsValid: false });\r\n    } else {\r\n      this.setState({ miliCodeIsValid: true });\r\n    }\r\n\r\n    this.refreshPersons(event.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"was-validated\">\r\n        <div className=\"md-form mt-0 \">\r\n          <label>کد ملی مشتری را وارد نمایید</label>\r\n\r\n          <input\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n            size=\"10\"\r\n            minLength=\"10\"\r\n            maxLength=\"10\"\r\n            required=\"required\"\r\n            data-testid=\"search-personnel\"\r\n          />\r\n          {showValidInvalidMsg(\r\n            this.state.miliCodeIsValid,\r\n            \"کد ملی بایستی ده رقم باشد وعدد باشد\"\r\n          )}\r\n        </div>\r\n        <br />\r\n        <ul className=\"list-group\" id=\"myList\">\r\n          {this.renderNewPersonForm()}\r\n\r\n          {this.renderExistPersonProposal()}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  renderNewPersonForm() {\r\n    return (\r\n      <li className=\"list-group-item\">\r\n        <QuickNewPersonForm\r\n          MilliCode={this.state.value}\r\n          saveCallback={(p) => {\r\n            let s = new PersonService();\r\n            s.save(p).then((res) => {\r\n              if (res.Status == 1) {\r\n                if (MyGlobal.IsDebugEnvirement) {\r\n                  let _persons = [...this.state.persons];\r\n                  _persons.push(p);\r\n\r\n                  this.setState({ persons: _persons.reverse() });\r\n                } else {\r\n                  this.refreshPersons(this.state.value);\r\n                }\r\n\r\n              } else {\r\n                alert(res.Message);\r\n              }\r\n            });\r\n          }}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n  renderExistPersonProposal() {\r\n    if (!this.state.persons) {\r\n      return <></>;\r\n    }\r\n\r\n    return this.state.persons.map((val, i, arr) => {\r\n      return (\r\n        <Route\r\n          render={({ history }) => (\r\n            <li\r\n            style={{direction:'rtl'}}\r\n              data-testid={\"person-\" + i}\r\n              className=\"list-group-item\"\r\n              onClick={() => {\r\n                DataHolder.selectedPerson = val;\r\n                this.props.parent.setState({ step: 2, PersonId: val.Id });\r\n              }}\r\n            >\r\n             {val.MilliCode}-  {val.Name} \r\n            </li>\r\n          )}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\nexport function showValidInvalidMsg(isValid, err, name) {\r\n  if (isValid) {\r\n    return (\r\n      <div data-testid={name + \"Validation\"} className=\"valid-feedback\">\r\n        درست است\r\n      </div>\r\n    );\r\n  } else {\r\n    if (err) {\r\n      return (\r\n        <div data-testid={name + \"Validation\"} className=\"invalid-feedback\">\r\n          {err}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div data-testid={name + \"Validation\"} className=\"invalid-feedback\">\r\n          درست نیست\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { showValidInvalidMsg } from \"../Pages/IssueAssignment/SelectPerson\";\r\nimport { numberWithCommas } from \"../service/Models\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport default class DynamicForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let resetButtonId =this.props.resetButtonId? this.props.resetButtonId:'resetButton';\r\n    this.state = { form: {} ,resetButtonId: resetButtonId};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n  }\r\n\r\n\r\n  resetForm(){\r\n\r\n    document.getElementById(this.state.resetButtonId).click();\r\n\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  handleChange(event, valName, isMoney, field) {\r\n    let value = event.target ? event.target.value : event;\r\n    this.state.form[valName] =field.type === \"select\" ||field.type === \"number\" || field.type === \"money\" ?parseInt(value) : value   ;\r\n\r\n    if (isMoney) {\r\n      this.state.form[valName + \"Money\"] = \" ریال \"+ numberWithCommas(value) ;\r\n    }\r\n\r\n    //validation\r\n    this.validation(field, event.target.value);\r\n\r\n    this.setState({ rdm: Math.random() });\r\n  }\r\n\r\n\r\n  componentWillMount(){\r\n    if(this.props.setParent){\r\n      this.props.setParent[this.props.setParentName]=this;\r\n    }\r\n  }\r\n\r\n  validation(field, value) {\r\n    if (!value) {\r\n      this.state[field.name + \"IsValid\"] = false;\r\n    } else {\r\n      this.state[field.name + \"IsValid\"] = true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let config = this.props.config;\r\n    return (\r\n      <>\r\n       <div className=\"col-md-12\" style={{margin:'20px'}}>\r\n       <form className={config.formClass}>{this.renderFields(config)}\r\n       \r\n       \r\n      \r\n      <div className=\"col-md-12\">\r\n      <button id={this.state.resetButtonId} onClick={()=>\r\n      \r\n      this.setState({form:{}})\r\n      } type=\"reset\" class=\"btn btn-info\">پاک کردن فرم</button>\r\n\r\n<Route\r\n  render={({ history }) => (\r\n    <button\r\nonClick={() => {  config.buttonCallback(this, history) }}\r\n      data-testid={config.buttonId}\r\n      type=\"button\"\r\n      className={config.buttonClass}\r\n    >\r\n      {config.buttonName}\r\n    </button>\r\n  )}\r\n/>\r\n      </div>\r\n       \r\n       </form>\r\n\r\n\r\n\r\n       </div>\r\n      </>\r\n    );\r\n  }\r\n  renderSelect(\r\n    propertyName,\r\n    optionList,\r\n    id_prop,\r\n    title_p,\r\n    title,\r\n    onchangeCallback,\r\n    field\r\n  ) {\r\n    if (!optionList) {\r\n      return <p>لیست لود نشد</p>;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <label>{title}</label>\r\n\r\n        <select\r\n          data-testid={field.name}\r\n          disabled={field.disabled}\r\n          className={this.getFieldClass({ name: propertyName })}\r\n          required={field.required}\r\n          onChange={(e) => {\r\n            this.handleChange(e, propertyName, false, field);\r\n\r\n            if (onchangeCallback) {\r\n            //  let val = optionList.find(\r\n            ///    (el) => el[id_prop] + \"\" === e.target.value\r\n            //  );\r\n\r\n              onchangeCallback(e, null, this.state);\r\n            }\r\n          }}\r\n        >\r\n          <option value=\"\">انتخاب نمایید</option>\r\n          {optionList &&\r\n            optionList.length &&\r\n            optionList.map((val, i, arr) => {\r\n              if (val[id_prop] === this.state.form[propertyName]) {\r\n                return (\r\n                  <option selected=\"selected\" value={val[id_prop]} key={val[id_prop]}>\r\n                    {val[title_p]}\r\n                  </option>\r\n                );\r\n              } else {\r\n                return <option value={val[id_prop]}>{val[title_p]}</option>;\r\n              }\r\n            })}\r\n        </select>\r\n\r\n\r\n\r\n        {showValidInvalidMsg(\r\n          this.state.form[propertyName + \"IsValid\"],\r\n          \"درست نیست\",\r\n          propertyName\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  getFieldClass(field) {\r\n    let cls = \"form-control\";\r\n\r\n    if (this.state[field.name + \"IsValid\"] === true) {\r\n      cls += \" \" + \"is-valid\";\r\n    } else if (this.state[field.name + \"IsValid\"] === false) {\r\n      cls += \" \" + \"is-invalid\";\r\n    } else {\r\n    }\r\n\r\n    return cls;\r\n  }\r\n\r\n  renderFields(config) {\r\n    return config.fields.map((field, i, arr) => {\r\n      switch (field.type) {\r\n        case \"file\":\r\n return <div className={field.col ? field.col : \"col-md-6\"}>\r\n              <label>{field.title}</label>\r\n              <input\r\n              maxLength={field.max}\r\n                type='file'\r\n                accept='image/*'\r\n                className={this.getFieldClass(field)}\r\n                placeholder={field.placeholder}\r\n                onChange={(e) => {\r\n\r\n                  readFileToByteArr(e,(bytearr)=>{\r\n\r\n                    let showImg=  bytearr;\r\n\r\nthis.state.form[field.name]=showImg;\r\n                    this.setState({sfds:Math.random()})\r\n                  });\r\n                 \r\n                }}\r\n                required={field.required}\r\n                data-testid={field.name}\r\n                disabled={field.disabled}\r\n              />\r\n\r\n              {this.state.form[field.name] && \r\n              <img src={this.state.form[field.name]}  width='150' height='150'/>}\r\n              {showValidInvalidMsg(\r\n                this.state[field.name + \"IsValid\"],null,\r\n                field.name\r\n              )}\r\n              </div>\r\nbreak;\r\n        case \"text\":\r\n        case \"money\":\r\n        case \"number\":\r\n          return (\r\n            <div className={field.col ? field.col : \"col-md-6\"}>\r\n              <label>{field.title}</label>\r\n              <input\r\n              maxLength={field.max}\r\n                type={field.type === \"text\" ? \"text\" : \"number\"}\r\n                className={this.getFieldClass(field)}\r\n                placeholder={field.placeholder}\r\n                onChange={(e) => {\r\n                  if (field.type === \"money\") {\r\n                    this.handleChange(e, field.name, true, field);\r\n                  } else {\r\n                    this.handleChange(e, field.name, false, field);\r\n                  }\r\n\r\n                  if (field.onchange) {\r\n                    field.onchange(e, null, this);\r\n                  }\r\n                }}\r\n                value={this.state.form[field.name]}\r\n                required={field.required}\r\n                data-testid={field.name}\r\n                disabled={field.disabled}\r\n              />\r\n              {showValidInvalidMsg(\r\n                this.state[field.name + \"IsValid\"],null,\r\n                field.name\r\n              )}\r\n\r\n              {field.type === \"money\" && (\r\n                <span data-testid={field.name + \"Money\"} style={{direction:'ltr'}}>\r\n                  {this.state.form[field.name + \"Money\"]}\r\n                </span>\r\n              )}\r\n            </div>\r\n          );\r\n        case \"select\":\r\n          return (\r\n            <div className={field.col ? field.col : \"col-md-6\"}>\r\n              {this.renderSelect(\r\n                field.name,\r\n                field.options,\r\n                \"Id\",\r\n                \"Name\",\r\n                \"نهاده\",\r\n                (e, val) => {\r\n                  if (field.onchange) {\r\n                    field.onchange(e, null, this);\r\n                  }\r\n                },\r\n                field\r\n              )}\r\n              {showValidInvalidMsg(\r\n                this.state[field.name + \"IsValid\"],null,\r\n                field.name\r\n              )}\r\n            </div>\r\n          );\r\n\r\n        case \"textarea\":\r\n          return (\r\n            <div className={field.col ? field.col : \"col-md-6\"}>\r\n              <label>{field.title}</label>\r\n              <textarea\r\n                disabled={field.disabled}\r\n                data-testid={field.name}\r\n                type=\"text\"\r\n                className={this.getFieldClass(field)}\r\n                placeholder={field.placeholder}\r\n                onChange={(e) => {\r\n                  if (field.type === \"money\") {\r\n                    this.handleChange(e, field.name, true, field);\r\n                  } else {\r\n                    this.handleChange(e, field.name, false, field);\r\n                  }\r\n\r\n                  if (field.onchange) {\r\n                    field.onchange(e, null, this);\r\n                  }\r\n                }}\r\n                value={this.state.form[field.name]}\r\n                required={field.required}\r\n              />\r\n              {showValidInvalidMsg(\r\n                this.state[field.name + \"IsValid\"],null,\r\n                field.name\r\n              )}\r\n            </div>\r\n          );\r\n\r\n        default:\r\n          return <></>;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction readFileToByteArr(e,callback){\r\n  if(!e.target.files || e.target.files.length==0 )\r\n  return ;\r\n  var reader = new FileReader();\r\nvar fileByteArray = [];\r\ndebugger; \r\nreader.readAsDataURL(e.target.files[0]);\r\nreader.onloadend = function (evt) {\r\n    if (evt.target.readyState == FileReader.DONE) {\r\n     /*   var arrayBuffer = evt.target.result,\r\n           array = new Uint8Array(arrayBuffer);\r\n       for (var i = 0; i < array.length; i++) {\r\n           fileByteArray.push(array[i]);\r\n        } */\r\n\r\n        callback(evt.target.result);\r\n    }\r\n\r\n    \r\n}\r\n}","import {MyGlobal} from './Models';\r\nimport {fn} from 'jquery';\r\n\r\nexport default class AnimalFoodService {\r\n\r\n    array = [];\r\n\r\n\r\n    constructor() {\r\n        this.array.push({Name: 'سبوس', Id: 1, PerUnitPrice: 15000, Remain: 50});\r\n        this.array.push({Name: 'گندم', Id: 2, PerUnitPrice: 85000, Remain: 35});\r\n        this.array.push({Name: 'جو', Id: 3, PerUnitPrice: 19000, Remain: 30});\r\n\r\n    }\r\n\r\n    getAllDebug() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n\r\n            resolve({Status: 1, EntityList: this.array});\r\n        })\r\n\r\n    }\r\n\r\n    getAllReal() {\r\n        return fetch('/AnimalFood')\r\n            .then(response => response.json());\r\n    }\r\n\r\n    save(form) {\r\n        debugger;\r\n\r\n        // Simple POST request with a JSON body using fetch\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(form)\r\n        };\r\n      return  fetch('/AnimalFood', requestOptions)\r\n            .then(response => response.json());\r\n        /*return new Promise((resolve, reject) => {\r\n\r\n            if (!form.Id) {\r\n                this.array.push({Name: form.Name, Id: 1, PerUnitPrice: form.PerUnitPrice, Remain: form.Remain});\r\n\r\n            }\r\n\r\n\r\n            resolve({Status: 1});\r\n        })*/\r\n    }\r\n\r\n    getAll() {\r\n\r\n\r\n        if (MyGlobal.IsDebugEnvirement) {\r\n            return this.getAllDebug();\r\n        }\r\n        return this.getAllReal();\r\n\r\n    }\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport DynamicForm from \"../components/DynamicForm\";\r\nimport { servicesVersion } from \"typescript\";\r\nimport AnimalFoodService from './../service/AnimalFoodService';\r\nimport { numberWithCommas } from \"../service/Models\";\r\n\r\nexport default class AnimalFoodPage extends Component {\r\n   animalFoodService=new AnimalFoodService();\r\n \r\n   constructor(props) {\r\n    super(props);\r\n    this.state = { };\r\n\r\n  }\r\n\r\n  getConfig() {\r\n    let config = {\r\n      formClass: \"form-row\",\r\n      buttonName: \"ثبت\",\r\n      buttonId: \"Save\",\r\n      buttonCallback: (form, history) => {\r\n        //  history.push('/InventoryStatus')\r\n\r\n        this.save();\r\n      },\r\n      buttonClass: \"btn btn-primary\",\r\n      fields: [\r\n        {\r\n          name: \"Name\",\r\n          placeholder: \"نام نهاده\",\r\n          title: \"نام نهاده\",\r\n          type: \"text\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n        {\r\n          name: \"Remain\",\r\n          placeholder: \"مقدار اولی\",\r\n          title: \"مقدار اولیه\",\r\n          type: \"number\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n        {\r\n          name: \"PerUnitPrice\",\r\n          placeholder: \"قیمت هر کیلو (ریال)\",\r\n          title: \"قیمت هر کیلو (ریال)\",\r\n          type: \"money\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n        {\r\n          name: \"PerCustomerTotalMalQouta\",\r\n          placeholder: \"کیلو برای هر گاو و گاومیش\",\r\n          title: \"کیلو برای هر گاو و گاومیش\",\r\n          type: \"number\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n        \r\n        {\r\n          name: \"Image\",\r\n          placeholder: \"تصویر\",\r\n          title: \"تصویر\",\r\n          type: \"file\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n      ],\r\n    };\r\n    return config;\r\n  }\r\n\r\n  save(){\r\n    let form=this.childDynamicFormComponentReference.getState().form;\r\n\r\n    if(!form.Name){\r\n      alert('نام وارد نشده است');\r\n      return;\r\n    }\r\n    if(form.Remain==null){\r\n      form.Remain=0;\r\n    }\r\n    \r\n    if( !this.state.editing && form.Remain==null){\r\n      alert('مقدار وارد نشده است');\r\n      return;\r\n    }\r\n\r\n    this.childDynamicFormComponentReference.resetForm();\r\n\r\n\r\n    this.animalFoodService.save(form).then(res=>{\r\n\r\n      if(res.Status===1){\r\n\r\n        this.readAllFoods();\r\n      }else{\r\n        alert(res.Message);\r\n      }\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.readAllFoods();\r\n  }\r\n\r\n\r\n  readAllFoods(){\r\n\r\n    return this.animalFoodService.getAll().then(res=>{\r\n      if(res.Status==1){\r\n        this.setState({animalFoods:res.EntityList});\r\n      }else{\r\n        alert(res.Message);\r\n      }\r\n    });\r\n\r\n  }\r\n  childDynamicFormComponentReference;\r\n\r\n  render() {\r\n    let config = this.getConfig();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\" data-testid=\"addForm\">\r\n          <DynamicForm\r\n            config={config}\r\n            setParent={this}\r\n            setParentName=\"childDynamicFormComponentReference\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-md-12\">\r\n          <table class=\"table\" data-testid=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">نام</th>\r\n                <th scope=\"col\">موجودی</th>\r\n                <th scope=\"col\">کیلو برای هر گاو و گاومیش</th>\r\n                <th scope=\"col\">قیمت واحد</th>\r\n                \r\n                <th scope=\"col\">عملیات</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody data-testid=\"rows\">{this.showRows()}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  showRows() {\r\n    if (!this.state.animalFoods) {\r\n      return <></>;\r\n    }\r\n\r\n    return this.state.animalFoods.map((val, i, arr) => {\r\n      return (\r\n        <tr key={val.Id}>\r\n          <th scope=\"row\">{val.Id}</th>\r\n          <td>{val.Name}</td>\r\n          <td>{val.Remain}</td>\r\n          <td>{val.PerCustomerTotalMalQouta}</td>\r\n          \r\n          <td style={{direction:'rtl'}}>  {numberWithCommas(val.PerUnitPrice)}   ریال</td>\r\n          <td><button className=\"btm btn-info\" \r\n           onClick={()=>this.edit(val)}>ویرایش</button></td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  edit(val){\r\n\r\n    \r\n    this.childDynamicFormComponentReference.setState({form:val});\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport const globalStylesheet ={\r\n    center:{\r\n        textAlign: 'center'\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AnimalFoodService from \"./../../service/AnimalFoodService\";\r\nimport { Route } from 'react-router';\r\nimport IssueAssignment from './../IssueAssignment/IssueAssignment';\r\nimport { DataHolder } from \"../../service/DateHolder\";\r\nimport { globalStylesheet } from \"../../components/GlobalCss\";\r\n\r\nexport default class InventoryStatus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.readAllAnimalFoods();\r\n  }\r\n\r\n  readAllAnimalFoods() {\r\n    let s = new AnimalFoodService();\r\n    s.getAll().then((res) => {\r\n      if (res.Status === 1) {\r\n        this.setState({ animalfoods: res.EntityList });\r\n      } else {\r\n        alert(res.Message);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n    <h3 style={globalStylesheet.center}>وضعیت انبار</h3>\r\n        <span style={{ display: \"none\" }} data-testid=\"InventoryStatus\">\r\n          InventoryStatus\r\n        </span>\r\n\r\n     \r\n        <div data-testid=\"animalfood-list\" className=\"row\">\r\n          {this.renderAnimalFoods()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAnimalFoods() {\r\n    if (!this.state.animalfoods) {\r\n      return <></>;\r\n    }\r\n\r\n    return this.state.animalfoods.map((val, i, arr) => {\r\n      return renderOneAnimalFood(val);\r\n    });\r\n  }\r\n}\r\n\r\nexport const renderOneAnimalFood = (animalFood, callback,parent) => {\r\n  return (\r\n    <div className=\"col-md-4\">\r\n\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\"> {animalFood.Name}</h5>\r\n        {/*   <h6 class=\"card-subtitle mb-2 text-muted\">\r\n            باقی مانده {animalFood.Remain} کیلوگرم\r\n          </h6> */}\r\n\r\n\r\n          <img src={animalFood.Image} width='150' height='150'/>\r\n          \r\n          <p class=\"card-text\">\r\n            باقی مانده {animalFood.Remain} کیلوگرم\r\n\r\n          </p>\r\n          {/*     <p class=\"card-text\">کیلو گرم {animalFood.Remain} باقی مانده</p>\r\n           */}{\" \"}\r\n\r\n\r\n           {!callback &&\r\n\r\n           <>\r\n           <Route\r\n  render={({ history }) => (\r\n    <button\r\nonClick={() => {  \r\n  DataHolder.selectedAnimalFood=animalFood;\r\nhistory.push('/IssueAssignmentList')\r\n\r\n }}\r\n      data-testid='IssueAssignmentList'\r\n      type=\"button\"\r\n      className='btn btn-primary'\r\n    >\r\n\r\n    حواله ها \r\n    </button>\r\n  )}\r\n/>\r\n\r\n<Route\r\n  render={({ history }) => (\r\n    <button\r\nonClick={() => { \r\n  DataHolder.selectedAnimalFood=animalFood;\r\nhistory.push('/BuyAnimalFoodList')\r\n  }}\r\ndata-testid='AnimalFoodBuyList'\r\n      type=\"button\"\r\n      className='btn btn-primary'\r\n    >\r\n\r\n    خرید ها \r\n    </button>\r\n  )}\r\n/>\r\n</>\r\n           }\r\n\r\n           {callback && <button\r\n            data-testid={\"food-\" + animalFood.Name}\r\n            style={{ color: \"white\" }} \r\n            type='button'\r\n            className=\"card-link btn btn-primary\"\r\n            onClick={() => {\r\n             \r\n             if(!animalFood.Remain || animalFood.Remain<=0){\r\n               parent.setState({errMsg:'از این نهاده در انبار موجود نیست'});\r\n               alert('از این نهاده در انبار موجود نیست ')\r\n               return;\r\n             }\r\n             parent.setState({errMsg:null});\r\n\r\n              callback();\r\n            }}\r\n          >\r\n            انتخاب\r\n          </button> }\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport AnimalFoodService from \"./../../service/AnimalFoodService\";\r\nimport { Route } from 'react-router';\r\nimport { DataHolder } from './../../service/DateHolder';\r\nimport { renderOneAnimalFood } from \"../InventoryStatus/InventoryStatus\";\r\nimport { globalStylesheet } from './../../components/GlobalCss';\r\n\r\nexport default class SelectAnimalFood extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { foods: [] };\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n    this.readAllAnimalFood();\r\n  }\r\n\r\n  readAllAnimalFood() {\r\n    let s = new AnimalFoodService();\r\n    s.getAll().then((res) => {\r\n        if(res.Status==1){\r\n            this.setState({ foods: res.EntityList });\r\n\r\n        }else{\r\n            alert(res.Message)\r\n        }\r\n      \r\n    }).catch(e=>{\r\n        alert('خطا در سیستم')\r\n    });\r\n  }\r\n\r\n  showAnimalFoods() {\r\n    if (!this.state.foods) {\r\n      return <></>;\r\n    }\r\n\r\n    return this.state.foods.map( (val, i, arr) =>{\r\n      return <Route render={({ history}) => (\r\n\r\n\r\n\r\n        renderOneAnimalFood( val,() => { \r\n\r\nDataHolder.selectedAnimalFood=val;\r\n\r\nthis.props.parent.setState({step:1,AnimalFoodId:val.Id});\r\n},this)\r\n        \r\n      )} />\r\n      \r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n    <h5>لطفا نهاده مورد نظر خود را انتخاب نمایید</h5>\r\n    {this.state.errMsg && <div style={globalStylesheet.center} className=\"alert alert-danger\">\r\n            {this.state.errMsg }\r\n        </div>\r\n      }\r\n\r\n    <div className=\"row\">\r\n    \r\n    \r\n    {this.showAnimalFoods()}</div>\r\n    </>;\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { showValidInvalidMsg } from './IssueAssignment/SelectPerson';\r\nimport { numberWithCommas } from '../service/Models';\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { form: {}, miliCodeIsValid: false };\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n    \r\n      handleChange(event, valName,isMoney) {\r\n\r\n        let value=event.target ? event.target.value : event;\r\n        this.state.form[valName] =  value;\r\n    \r\n\r\n        if(isMoney){\r\n            this.state.form[valName]=numberWithCommas(this.state.form[valName]);\r\n        }\r\n\r\n        if (!value || value.length !== 10) {\r\n            this.state.form[valName+\"IsValid\"]=false;\r\n        } else {\r\n            this.state.form[valName+\"IsValid\"]=false;\r\n        }\r\n        this.setState({ rdm: Math.random() });\r\n    \r\n      }\r\n\r\n\r\n      serverResponseEntityListCallback(res,name){\r\n        let temp={};\r\n        temp[name]=res.EntityList;\r\n\r\n      if(res.Status==1){\r\n\r\n          this.setState(temp)\r\n      }else{\r\n          alert(res.Message);\r\n      }\r\n\r\n    }\r\n\r\n    serverResponseSingleCallback(res,name){\r\n        let temp={};\r\n        temp[name]=res.Single;\r\n\r\n      if(res.Status==1){\r\n\r\n          this.setState(temp)\r\n      }else{\r\n          alert(res.Message);\r\n      }\r\n\r\n    }\r\n\r\n\r\n    renderSelect(propertyName,optionList,id_prop,title_p,title,onchangeCallback){\r\n\r\nif (!optionList) {\r\n    return <p>لیست لود نشد</p>;\r\n    \r\n}\r\n\r\n        return <>\r\n              <label for=\"validationServer01\">{title}</label>\r\n\r\n            <select class=\"custom-select\" required  \r\n             onChange={(e) => {\r\n                  this.handleChange(e, propertyName);\r\n\r\n                  if(onchangeCallback){\r\n                let val=  optionList.find(el=>el[id_prop]+\"\"===e.target.value);\r\n\r\n                      onchangeCallback(e,val)\r\n                  }\r\n                }}>\r\n        <option value=\"\">انتخاب نمایید</option>\r\n       {optionList.map((val,i,arr)=>{\r\n\r\n           if(val[id_prop]===this.state.form[propertyName]){\r\n            return  <option selected=\"selected\" value={val}>{val[title_p]}</option>\r\n\r\n           }else{\r\n            return  <option value={val[id_prop]}>{val[title_p]}</option>\r\n\r\n           }\r\n       })}\r\n      </select>\r\n            {showValidInvalidMsg(this.state.form[propertyName+'IsValid'],'درست نیست')}\r\n\r\n        </>\r\n    }\r\n}\r\n","\r\nimport { MyGlobal } from './Models';\r\n\r\nexport class GlobalSiteSettingService{\r\n    getAll(){\r\n\r\n\r\n        if (MyGlobal.IsDebugEnvirement) {\r\n            return this.getAllDebug();\r\n        }\r\n        return this.getAllReal();\r\n\r\n    }\r\n    getAllDebug(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n               \r\n   \r\n           let array=[];\r\n   \r\n           \r\n   \r\n           resolve({Status:1,Single:{\r\n               \r\n\r\n\r\n            Unit:'کیلوگرم',\r\n            PerUnitPrice:25000\r\n\r\n            \r\n\r\n           }});\r\n           })\r\n           \r\n       }\r\n   \r\n       getAllReal(){\r\n   \r\n       }\r\n\r\n}","\r\n\r\n\r\nexport class IssueAssignmentService {\r\n\r\n\r\n    getAnimalFoodAndPersonQuota(foodId,personId){\r\n        return  fetch(`/IssueAssignment/getAnimalFoodAndPersonQuota?foodId=${foodId}&personId=${personId}`)\r\n            .then(response => response.json());\r\n    }\r\n\r\ngetAllByAnimalFoodId(animalFoodId,page,size){\r\n    return  fetch(`/IssueAssignment/getAllByAnimalFoodId?animalFoodId=${animalFoodId}&take=${page}&skip=${size}`)\r\n    .then(response => response.json());\r\n}\r\n\r\n\r\n    save(form){\r\n\r\n        // Simple POST request with a JSON body using fetch\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(form)\r\n        };\r\n        return  fetch('/IssueAssignment/Issue', requestOptions)\r\n            .then(response => response.json());\r\n        \r\n        /*return new Promise((resolve, reject) => {\r\n            \r\n\r\n\r\n\r\n    \r\n            resolve({Status:1});\r\n            })*/\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { showValidInvalidMsg } from \"./SelectPerson\";\r\nimport BaseComponent from \"./../BaseComponent\";\r\nimport AnimalFoodService from \"./../../service/AnimalFoodService\";\r\nimport { PersonService } from \"./../../service/PersonService\";\r\nimport { GlobalSiteSettingService } from \"./../../service/GlobalSiteSettingService\";\r\nimport { numberWithCommas } from \"../../service/Models\";\r\nimport { DataHolder } from \"./../../service/DateHolder\";\r\nimport DynamicForm from \"../../components/DynamicForm\";\r\nimport IssueAssignment from \"./IssueAssignment\";\r\nimport { IssueAssignmentService } from \"../../service/IssueAssignmentService\";\r\n\r\nexport default class Assignment extends BaseComponent {\r\n  componentDidMount() {\r\n    this.loadAllAnimalFoods().then(s=>{\r\n\r\n      this.loadAllPersonnel().then(s2=>{\r\n        \r\n        this.loadExactKg();\r\n      }).catch(s2=>{\r\n        this.loadExactKg();\r\n\r\n      });\r\n\r\n\r\n    }).catch(s=>{\r\n      this.loadExactKg();\r\n\r\n    });\r\n\r\n\r\n    \r\n    \r\n    \r\n    \r\n //   this.loadGlobalSiteSetting();\r\n  }\r\n  \r\n  loadExactKg(){\r\n    if (DataHolder.selectedAnimalFood && DataHolder.selectedPerson) {\r\n\r\n      this.getAnimalFoodAndPersonQuota(\r\n          DataHolder.selectedAnimalFood.Id,\r\n          DataHolder.selectedPerson.Id\r\n      );\r\n\r\n    }\r\n  }\r\n\r\n  childDynamicFormComponentReference;\r\n\r\n  loadAllAnimalFoods() {\r\n    let s = new AnimalFoodService();\r\n   return  s.getAll().then((res) => {\r\n      this.serverResponseEntityListCallback(res, \"animalFoods\");\r\n\r\n      if (DataHolder.selectedAnimalFood) {\r\n        let form = this.childDynamicFormComponentReference.getState().form;\r\n\r\n        \r\n        form.AnimalFoodId = DataHolder.selectedAnimalFood.Id;\r\n\r\n        form.PerUnitPrice = DataHolder.selectedAnimalFood.PerUnitPrice;\r\n\r\n        form.PerUnitPriceMoney = numberWithCommas(\r\n          DataHolder.selectedAnimalFood.PerUnitPrice\r\n        );\r\n\r\n        this.childDynamicFormComponentReference.setState({\r\n          form: form,\r\n          td: Math.random(),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  loadAllPersonnel() {\r\n    let s = new PersonService();\r\n   return s.getAll().then((res) => {\r\n      this.serverResponseEntityListCallback(res, \"persons\");\r\n\r\n      debugger;\r\n      if (DataHolder.selectedPerson) {\r\n        let form = this.childDynamicFormComponentReference.getState().form;\r\n\r\n        form.PersonId = DataHolder.selectedPerson.Id;\r\n\r\n        this.childDynamicFormComponentReference.setState({\r\n          form: form,\r\n          td: Math.random(),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  save(dynamicForm, history) {\r\n    let form = dynamicForm.getState().form;\r\n    if (\r\n      !form.AnimalFoodId ||\r\n      !form.PersonId ||\r\n      !form.PerUnitPrice ||\r\n      !form.Quan ||\r\n      !form.TotalPrice\r\n    ) {\r\n      alert(\"مقادیر اشتباه است لطفا مقادیر درست وارد نمایید\");\r\n      return;\r\n    }\r\n\r\n    \r\n    if((form.Quan+\"\").length>5){\r\n      alert(\r\n        \"مقدار بیشتر از 5 رقم مجاز نیست\"\r\n      );\r\n      return false;\r\n    }\r\n    try {\r\n      parseInt(form.Quan);\r\n    } catch (e) {\r\n      alert(\"مقادیر اشتباه است لطفا مقادیر درست وارد نمایید\");\r\n      return;\r\n    }\r\n\r\n    let s = new IssueAssignmentService();\r\n\r\n\r\n    s.save(form)\r\n      .then((res) => {\r\n        if (res.Status === 1) {\r\n         // this.state.form[\"Id\"]=res.Single;\r\n          debugger;\r\n          DataHolder.selectedIssueAssignment = res.Single;\r\n          history.push('/PrintIssueAssignment')\r\n\r\n          //history.push(\"/InventoryStatus\");\r\n        } else {\r\n          alert(res.Message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        alert(\"به اینترنت متصل نیستید\");\r\n      });\r\n  }\r\n\r\n  getConfig() {\r\n    let config = {\r\n      formClass: \"form-row\",\r\n      buttonName: \"صدور حواله\",\r\n      buttonId: \"submitIssueAssignment\",\r\n      buttonCallback: (form, history) => {\r\n        this.save(form, history);\r\n      },\r\n      buttonClass: \"btn btn-primary\",\r\n      fields: [\r\n        {\r\n          name: \"AnimalFoodId\",\r\n          placeholder: \"نوع نهاده\",\r\n          title: \"نهاده\",\r\n          type: \"select\",\r\n          options: this.state.animalFoods,\r\n          nameField: \"Name\",\r\n          valueField: \"Id\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n        {\r\n          //      {this.renderSelect(\r\n          // 'PersonId',this.state.persons,'Id','Name','مشتری')}\r\n          name: \"PersonId\",\r\n          placeholder: \"مشتری\",\r\n          title: \"مشتری\",\r\n          type: \"select\",\r\n          required: true,\r\n          options: this.state.persons,\r\n          nameField: \"Name\",\r\n          valueField: \"Id\",\r\n          col: \"col-md-6\",\r\n        },\r\n        {\r\n          name: \"PerUnitPrice\",\r\n          placeholder: \"مبلغ هر کیلو (ریال)\",\r\n          title: \"مبلغ هر کیلو (ریال)\",\r\n          type: \"money\",\r\n          disabled: true,\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n\r\n        {\r\n          name: \"Quan\",\r\n          placeholder: \"مقدار (کیلوگرم)\",\r\n          title: \"مقدار (کیلوگرم)\",\r\n          type: \"number\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n          onchange: (e, val, dynamicForm) => {\r\n            this.updateFormAfterQuan(dynamicForm)\r\n          },\r\n        },\r\n        {\r\n          name: \"TotalPrice\",\r\n          placeholder: \"مبلغ کل (ریال)\",\r\n          title: \"مبلغ کل (ریال)\",\r\n          type: \"money\",\r\n          disabled: true,\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n        {\r\n          name: \"BankFish\",\r\n          placeholder: \"شماره فیش واریزی\",\r\n          title: \"شماره فیش واریزی\",\r\n          type: \"text\",\r\n          required: false,\r\n          col: \"col-md-6\",\r\n        },\r\n        {\r\n          name: \"Description\",\r\n          placeholder: \"توضیحات\",\r\n          title: \"توضیحات\",\r\n          type: \"textarea\",\r\n          required: false,\r\n          col: \"col-md-6\",\r\n        },\r\n      ],\r\n    };\r\n    return config;\r\n  }\r\n\r\n  loadGlobalSiteSetting() {\r\n    let s = new GlobalSiteSettingService();\r\n    s.getAll().then((res) => {\r\n      this.serverResponseSingleCallback(res, \"setting\");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let config = this.getConfig();\r\n    return (\r\n      <div className=\"row\">\r\n        <DynamicForm\r\n          config={config}\r\n          setParent={this}\r\n          setParentName=\"childDynamicFormComponentReference\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  updateTotalPrice(e) {\r\n    if (this.state.form.PerUnitPrice) {\r\n      let value =\r\n        this.state.form.PerUnitPrice *\r\n        parseInt(this.state.form.Quan ? this.state.form.Quan : 0);\r\n      debugger;\r\n      this.handleChange(value, \"TotalPrice\", true);\r\n      this.handleChange(this.state.form.PerUnitPrice, \"PerUnitPrice\", true);\r\n    }\r\n  }\r\n\r\n  getAnimalFoodAndPersonQuota(foodId, personId) {\r\n\r\n    let s = new IssueAssignmentService();\r\n\r\n\r\n    s.getAnimalFoodAndPersonQuota(foodId,personId)\r\n        .then((res) => {\r\n          if (res.Status === 1) {\r\n\r\n            let form = this.childDynamicFormComponentReference.getState().form;\r\n            \r\n            form[\"Quan\"]=res.Single.Kg;\r\n\r\n            this.childDynamicFormComponentReference.setState({\r\n              form: form,\r\n              td: Math.random(),\r\n            });\r\n            \r\n            /*ویرایش اطلاعات فرم بعد از زدن کلیلوگرم*/\r\n            this.updateFormAfterQuan(this.childDynamicFormComponentReference)\r\n\r\n          } else {\r\n            alert(res.Message);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          alert(\"به اینترنت متصل نیستید\");\r\n        });\r\n  }\r\n\r\n  updateFormAfterQuan(dynamicForm) {\r\n    let formState = dynamicForm.getState();\r\n    let totalValue =\r\n        parseInt(formState.form.PerUnitPrice) *\r\n        parseInt(formState.form.Quan ? formState.form.Quan : 0);\r\n\r\n    formState.form.TotalPrice = totalValue;\r\n\r\n    formState.form.TotalPriceMoney = numberWithCommas(totalValue);\r\n\r\n    dynamicForm.setState({ td: Math.random() });\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class PrintAssignment extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                پرینت حواله\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class WarehouseInventory extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\n\r\nimport React, { Component, useState } from 'react'\r\nimport SelectAnimalFood from './SelectAnimalFood'\r\nimport SelectPerson from './SelectPerson';\r\nimport Assignment from './Assignment';\r\nimport { DataHolder } from './../../service/DateHolder';\r\nimport PrintAssignment from './PrintAssignment';\r\nimport WarehouseInventory from './../WarehouseInventory';\r\n\r\nexport default class IssueAssignment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { step:0 };\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <h3>صدور حواله (خروج از انبار) </h3>\r\n            \r\n<WarehouseInventory/>\r\n      <hr/>\r\n\r\n                {this.state.step==0 &&  <SelectAnimalFood parent={this}/>}\r\n                {this.state.step==1 && this.state.AnimalFoodId\r\n                 &&  <SelectPerson parent={this}/>}\r\n\r\n                 {this.state.step==2 && this.state.AnimalFoodId \r\n                && DataHolder.selectedPerson.Name\r\n                 &&  <Assignment parent={this}/>}\r\n\r\n                 {this.state.step==3 && this.state.AnimalFoodId \r\n                && DataHolder.selectedPerson.Name\r\n                 &&  <PrintAssignment parent={this}/>}\r\n                 \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport BaseComponent from './../BaseComponent';\r\nimport { showValidInvalidMsg } from '../IssueAssignment/SelectPerson';\r\nimport AnimalFoodService from './../../service/AnimalFoodService';\r\nimport { DataHolder } from './../../service/DateHolder';\r\nimport { GlobalSiteSettingService } from './../../service/GlobalSiteSettingService';\r\nimport { numberWithCommas } from '../../service/Models';\r\n\r\nexport default class InventoryIn extends BaseComponent {\r\n    componentDidMount() {\r\n        this.loadAllAnimalFoods();\r\n      //  this.loadAllPersonnel();\r\n       // this.loadGlobalSiteSetting();\r\n    \r\n      }\r\n      \r\n    \r\n      loadAllAnimalFoods(){\r\n        let s=new AnimalFoodService();\r\n        s.getAll().then(res=>{\r\n          this.serverResponseEntityListCallback(res,'animalFoods');\r\n    \r\n          if (DataHolder.selectedAnimalFood) {\r\n            this.state.form.AnimalFoodId=DataHolder.selectedAnimalFood.Id;\r\n          }\r\n    \r\n        })\r\n    }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-md-6\">\r\n          <div class=\"form\">\r\n            <div class=\"col-md-6 \">\r\n          \r\n            {this.renderSelect(\r\n             'AnimalFoodId',this.state.animalFoods,'Id','Name','نهاده')}\r\n              \r\n            </div>\r\n\r\n            <div class=\"col-md-6 \">\r\n              <label for=\"validationServer01\">مبلغ هر کیلو (ریال)</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control is-valid\"\r\n                id=\"validationServer01\"\r\n                placeholder=\"مبلغ هر کیلو\"\r\n               disabled\r\n                value={this.state.form.PerUnitPrice}\r\n                required\r\n              />\r\n\r\n              {showValidInvalidMsg()}\r\n            </div>\r\n\r\n            <div class=\"col-md-6 \">\r\n              <label for=\"validationServer01\">مبلغ کل (ریال)</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control is-valid\"\r\n                id=\"validationServer01\"\r\n                placeholder=\"مبلغ کل\"\r\n                disabled\r\n               \r\n                value={this.state.form.TotalPrice}\r\n                required\r\n              />\r\n\r\n              {showValidInvalidMsg()}\r\n            </div>\r\n          \r\n            <div class=\"col-md-6 \">\r\n            {this.renderSelect(\r\n             'PersonId',this.state.persons,'Id','Name','مشتری')}\r\n             \r\n            </div>\r\n\r\n            <button\r\n              onClick={() => {\r\n                if (this.props.saveCallback) {\r\n                  this.props.saveCallback(this.state.form);\r\n                }\r\n\r\n                this.props.parent.setState({step:3});\r\n              }}\r\n            >\r\n              صدور حواله\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n        <div class=\"col-md-6 \">\r\n              <label for=\"validationServer01\">مقدار (کیلوگرم)</label>\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control is-valid\"\r\n                id=\"validationServer01\"\r\n                placeholder=\"چند کیلو گرم ؟\"\r\n                onChange={(e) => {\r\n                  this.handleChange(e, \"Quan\");\r\n                 this.updateTotalPrice(e);\r\n\r\n                }}\r\n                value={this.state.form.Quan}\r\n                required\r\n              />\r\n\r\n              {showValidInvalidMsg()}\r\n            </div>\r\n              <div class=\"col-md-6 \">\r\n              <label for=\"validationServer02\">بابت فیش</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control is-valid\"\r\n                id=\"validationServer02\"\r\n                placeholder=\"کد ملی\"\r\n                onChange={(e) => {\r\n                  this.handleChange(e, \"BankFish\");\r\n                }}\r\n                value={this.state.form.BankFish}\r\n                required\r\n              />\r\n              {showValidInvalidMsg(this.state.BankFishIsValid)}\r\n            </div>\r\n            <div class=\"col-md-6 \">\r\n              <label for=\"validationServer02\">توضیحات</label>\r\n              <textarea\r\n                type=\"text\"\r\n                class=\"form-control is-valid\"\r\n                id=\"validationServer02\"\r\n                placeholder=\"توضیحات\"\r\n                onChange={(e) => {\r\n                  this.handleChange(e, \"Description\");\r\n                }}\r\n                value={this.state.form.Description}\r\n                required\r\n              />\r\n              {showValidInvalidMsg(this.state.DescriptionIsValid)}\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {MyGlobal} from './Models';\r\nimport {fn} from 'jquery';\r\n\r\nexport default class AnimalFoodBuyService {\r\n\r\n    array = [];\r\n\r\n\r\n    constructor() {\r\n        this.array.push({Name: 'سبوس', Id: 1, PerUnitPrice: 15000, Remain: 50});\r\n        this.array.push({Name: 'گندم', Id: 2, PerUnitPrice: 85000, Remain: 35});\r\n        this.array.push({Name: 'جو', Id: 3, PerUnitPrice: 19000, Remain: 30});\r\n\r\n    }\r\n\r\n    getAllDebug() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n\r\n            resolve({Status: 1, EntityList: this.array});\r\n        })\r\n\r\n    }\r\n\r\n    getAllRealByanimalFoodId(animalFoodId,lastTake,skip){\r\n        return fetch(`/AnimalFoodBuy/GetAllByAnimalFoodId?animalFoodId=${animalFoodId}&take=${lastTake}&skip=${skip}`)\r\n        .then(response => response.json());\r\n    }\r\n    getAllReal(lastTake,skip) {\r\n        return fetch(`/AnimalFoodBuy?take=${lastTake}&skip=${skip}`)\r\n            .then(response => response.json());\r\n    }\r\n\r\n    save(form) {\r\n        debugger;\r\n\r\n        // Simple POST request with a JSON body using fetch\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(form)\r\n        };\r\n      return  fetch('/AnimalFoodBuy', requestOptions)\r\n            .then(response => response.json());\r\n        /*return new Promise((resolve, reject) => {\r\n\r\n            if (!form.Id) {\r\n                this.array.push({Name: form.Name, Id: 1, PerUnitPrice: form.PerUnitPrice, Remain: form.Remain});\r\n\r\n            }\r\n\r\n\r\n            resolve({Status: 1});\r\n        })*/\r\n    }\r\n\r\n    getAll(animalFoodId,lastTake,lastSize) {\r\n\r\n\r\n        if (MyGlobal.IsDebugEnvirement) {\r\n            return this.getAllDebug();\r\n        }\r\n\r\n        if(animalFoodId){\r\n            return this.getAllRealByanimalFoodId(animalFoodId,lastTake,lastSize);\r\n\r\n        }else{\r\n            return this.getAllReal(lastTake,lastSize);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport DynamicForm from \"./../../components/DynamicForm\";\r\nimport AnimalFoodService from \"./../../service/AnimalFoodService\";\r\nimport { numberWithCommas } from \"../../service/Models\";\r\nimport AnimalFoodBuyService from \"./../../service/AnimalFoodBuyService\";\r\nimport { globalStylesheet } from './../../components/GlobalCss';\r\n\r\nexport default class BuyAnimalFood extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { animalFoods: {} };\r\n  }\r\n\r\n  getAnimalFoods() {\r\n    return this.state.animalFoods;\r\n  }\r\n  readAllAnimalFoods() {\r\n    let s = new AnimalFoodService();\r\n    return s.getAll().then((res) => {\r\n      if (res.Status == 1) {\r\n        this.setState({ animalFoods: res.EntityList });\r\n      } else {\r\n        alert(res.Message);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.readAllAnimalFoods();\r\n  }\r\n\r\n  /* ,\r\n          onchange:(e,val,dynamicForm)=>{\r\n  \r\n            let formState= dynamicForm.getState();\r\n      let totalValue=parseInt(formState.form.PerUnitPrice)*parseInt((formState.form.Quan ? formState.form.Quan:0));\r\n  \r\n      formState.form.TotalPrice=totalValue;\r\n  \r\n  \r\n      dynamicForm.setState({td:Math.random()});\r\n          } */\r\n\r\n  updatePrices(dynamicForm) {\r\n    if (!dynamicForm.getState())\r\n      throw new Error(\"dynamicForm.getState() is null\");\r\n    if (!dynamicForm.getState().form)\r\n      throw new Error(\"dynamicForm.getState().form is null\");\r\n\r\n    let AnimalFoodId = parseInt(dynamicForm.getState().form.AnimalFoodId);\r\n\r\n    if (!AnimalFoodId)\r\n    {\r\n      alert('لطفا ابتدا نهاده را انتخاب نمایید');\r\n      return;\r\n    }\r\n\r\n    if (!AnimalFoodId) throw new Error(\"AnimalFoodId is null\");\r\n\r\n    // از بین لیست پیداکن\r\n    let animalFood = this.state.animalFoods.find((f) => f.Id == AnimalFoodId);\r\n\r\n    if (!animalFood) throw new Error(\"animalFood is null\");\r\n    if (!dynamicForm.getState().form)\r\n      throw new Error(\"dynamicForm.form is null\");\r\n\r\n    // واحد آن را استخراج کن  به ورودی فرم بزن\r\n    dynamicForm.getState().form.PerUnitPrice = animalFood.PerUnitPrice;\r\n    dynamicForm.getState().form.PerUnitPriceMoney = numberWithCommas(\r\n      animalFood.PerUnitPrice\r\n    );\r\n\r\n    let quan = dynamicForm.getState().form.Quan\r\n      ? dynamicForm.getState().form.Quan\r\n      : 0;\r\n\r\n    // قیمت کل را محاسبه کن\r\n    let totalPrice = animalFood.PerUnitPrice * quan;\r\n\r\n    dynamicForm.getState().form.TotalPrice = totalPrice;\r\n    dynamicForm.getState().form.TotalPriceMoney = numberWithCommas(totalPrice);\r\n\r\n    dynamicForm.setState({ bdn: Math.random() });\r\n  }\r\n\r\n  validation(dynamicForm) {\r\n    let form = dynamicForm.getState().form;\r\n    if (\r\n      !form.Quan ||\r\n      !form.AnimalFoodId ||\r\n      !form.PerUnitPrice ||\r\n      !form.TotalPrice\r\n    ) {\r\n      alert(\r\n        \"مقادیر اشتباه است لطفا فرم را چک ، و موارد اشتباه را اصلاح فرمایید\"\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if((form.Quan+\"\").length>5){\r\n      alert(\r\n        \"مقدار بیشتر از 5 رقم مجاز نیست\"\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  save(form, history) {\r\n    let s = new AnimalFoodBuyService();\r\n    form.DateTime=new Date();\r\n    return s\r\n      .save(form)\r\n      .then((res) => {\r\n        debugger;\r\n        if (res.Status === 1) {\r\n          // success\r\n          history.push(\"/InventoryStatus\");\r\n          \r\n        } else {\r\n          alert(res.Message);\r\n        }\r\n      })\r\n      .catch((re) => {\r\n        console.error(re);\r\n        alert(\"خطایی رخ داد\");\r\n      });\r\n  }\r\n  getConfig() {\r\n    let config = {\r\n      formClass: \"form-row\",\r\n      buttonName: \"ثبت\",\r\n      buttonId: \"submitBuyAnimalFood\",\r\n      buttonClass: \"btn btn-primary\",\r\n      buttonCallback: (dynamicForm, history) => {\r\n        let isValid = this.validation(dynamicForm);\r\n\r\n        if (isValid) {\r\n          this.save(dynamicForm.state.form,history);\r\n        }\r\n      },\r\n      fields: [\r\n        {\r\n          name: \"AnimalFoodId\",\r\n          placeholder: \"نوع نهاده\",\r\n          title: \"نهاده\",\r\n          type: \"select\",\r\n          options: this.state.animalFoods,\r\n          nameField: \"Name\",\r\n          valueField: \"Id\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n          onchange: (e, val, dynamicForm) => {\r\n            this.updatePrices(dynamicForm);\r\n          },\r\n        },\r\n        {\r\n          name: \"Quan\",\r\n          placeholder: \"مقدار\",\r\n          title: \"مقدار (کیلوگرم)\",\r\n          type: \"number\",\r\n          max:5,\r\n          required: true,\r\n          col: \"col-md-6\",\r\n          onchange: (e, val, dynamicForm) => {\r\n            this.updatePrices(dynamicForm);\r\n          },\r\n        },\r\n        {\r\n          name: \"PerUnitPrice\",\r\n          placeholder: \"قیمت هر کیلو\",\r\n          title: \"قیمت هر کیلو\",\r\n          type: \"money\",\r\n          required: true,\r\n          disabled: true,\r\n          col: \"col-md-6\",\r\n        },\r\n        {\r\n          name: \"TotalPrice\",\r\n          placeholder: \"مبلغ کل\",\r\n          title: \"مبلغ کل\",\r\n          type: \"money\",\r\n          required: true,\r\n          disabled: true,\r\n          col: \"col-md-6\",\r\n        },\r\n\r\n        {\r\n          name: \"Fish\",\r\n          placeholder: \"شماره فیش بانک\",\r\n          title: \"شماره فیش بانک\",\r\n          type: \"text\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n        {\r\n          name: \"Description\",\r\n          placeholder: \"توضیحات\",\r\n          title: \"توضیحات\",\r\n          type: \"textarea\",\r\n          required: true,\r\n          col: \"col-md-6\",\r\n        },\r\n      ],\r\n    };\r\n    return config;\r\n  }\r\n  render() {\r\n    let config = this.getConfig();\r\n    return (\r\n      <>\r\n\r\n<h4 style={globalStylesheet.center}>خرید نهاده  (ورود نهاده به انبار )</h4>\r\n      <div className=\"row\">\r\n      \r\n\r\n        <DynamicForm config={config} />\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n\r\n\r\n\r\nexport const  pagingComponent=(total,lastTake,lastSkip,parent,funcName) => {\r\n\r\n    if (lastTake>total){\r\n        lastTake=total;\r\n    }\r\n    debugger;\r\n    let partCount = total / lastTake +( total % lastTake > 0 ? 1 : 0);\r\n    let currentPart = 1;\r\n    if (lastSkip) {\r\n      currentPart = total / lastSkip + ( total % lastTake > 0 ? 1 : 0);\r\n    }\r\n\r\n    let arr = [];\r\n    for (let i = 1; i <= partCount; i++) {\r\n      arr.push(i);\r\n    }\r\n\r\n    \r\n\r\n    return (<div>\r\n      {arr.map(i => {\r\n          if (i==lastSkip+1){\r\n              return <button style={{color:'blue'}} onClick={() => {\r\n \r\n                  parent[funcName](lastTake, i * lastTake -1);\r\n              }}>{i}</button>;\r\n          }else{\r\n              return <button onClick={() => {\r\n\r\n                  parent[funcName](lastTake, i * lastTake -1);\r\n              }}>{i}</button>;\r\n          }\r\n          \r\n   \r\n      })}\r\n    </div>);\r\n}\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {IssueAssignmentService} from \"../service/IssueAssignmentService\";\r\nimport {useParams} from \"react-router\";\r\nimport {Route, Switch, Link} from \"react-router-dom\";\r\nimport {globalStylesheet} from './../components/GlobalCss';\r\nimport {numberWithCommas} from \"../service/Models\";\r\nimport {DataHolder} from \"../service/DateHolder\";\r\nimport {pagingComponent} from \"./paging\";\r\n\r\nexport default class IssueAssignmentList extends Component {\r\n\r\n    constructor(args) {\r\n        super(args);\r\n\r\n        this.state = {list: [], LastTake: 0, LastSkip: 0};\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        this.readAndSet(this.state.LastTake, this.state.LastSkip);\r\n\r\n    }\r\n    \r\n    readAndSet(take,skip){\r\n        this.readAllIssueAssignments(take,skip)\r\n            .then((res) => {\r\n                if (res.Status == 1) {\r\n                    //success\r\n                    this.setState({\r\n                        list: res.EntityList, Total: res.Total,\r\n                        LastTake: res.LastTake, LastSkip: res.LastSkip\r\n                    });\r\n\r\n                } else {\r\n                    alert(res.Message);\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                console.error(e);\r\n                alert(\"خطایی رخ داد\");\r\n            });\r\n    }\r\n\r\n    readAllIssueAssignments(take,skip) {\r\n\r\n\r\n        let animalFoodId = DataHolder.selectedAnimalFood ?  DataHolder.selectedAnimalFood.Id : null;\r\n\r\n        let s = new IssueAssignmentService();\r\n        return s.getAllByAnimalFoodId(animalFoodId ? animalFoodId : '', take, skip);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 style={globalStylesheet.center}> لیست حواله ها</h3>\r\n                \r\n                {DataHolder.selectedAnimalFood && DataHolder.selectedAnimalFood.Name &&\r\n                <h4 style={{textAlign:'right'}}>نهاده انتخاب شده : {DataHolder.selectedAnimalFood.Name}</h4>}\r\n                \r\n                <table dir=\"rtl\" className=\"table table-bordered\" style={{direction: 'ltr'}}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ردیف</th>\r\n                        <th>نوع نهاده</th>\r\n                        <th>نام شخص</th>\r\n                        <th>قیمت هر کیلو</th>\r\n                        <th>مقدار(کیلوگرم)</th>\r\n                        <th>مبلغ کل</th>\r\n                        <th>شماره فیش</th>\r\n                        <th>توضیحات</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.list &&\r\n                    this.state.list.map((val, i, arr) => {\r\n                        return <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{val.AnimalFood.Name}</td>\r\n                            <td>{val.Person.Name} {val.Person.NamVaNameKhanevadegi} </td>\r\n                            <td>{numberWithCommas(val.AnimalFood.PerUnitPrice)} ریال</td>\r\n                            <td>{val.Quan}</td>\r\n                            <td>{numberWithCommas(val.TotalPrice)} ریال</td>\r\n                            <td>{val.BankFish}</td>\r\n                            <td>{val.Description}</td>\r\n                            <td>\r\n\r\n                                <Route render={({history}) => \r\n                                    (<button type='button' onClick={() => {\r\n                                        DataHolder.selectedIssueAssignment = val;\r\n                                        history.push('/PrintIssueAssignment')\r\n                                    }}>پرینت\r\n                                    </button>)\r\n                                }>\r\n                                   \r\n\r\n                                </Route>\r\n                            </td>\r\n                        </tr>;\r\n                    })}\r\n\r\n                    <tr>\r\n                        <td colSpan=\"66\">\r\n                            {pagingComponent( this.state.Total,this.state.LastTake,this.state.LastSkip,this,'pagingCallback')}\r\n\r\n                        </td>\r\n\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    pagingCallback(take,skip){\r\n\r\n        this.setState({LastSkip:skip,LastTake:take});\r\n        this.readAndSet(take,skip);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\nimport React, { Component } from 'react'\r\nimport AnimalFoodBuyService from './../service/AnimalFoodBuyService';\r\nimport { globalStylesheet } from './../components/GlobalCss';\r\nimport { numberWithCommas } from '../service/Models';\r\nimport { pagingComponent } from './paging';\r\nimport { pupuHiComponent } from './pupuHiComponent';\r\nimport { DataHolder } from '../service/DateHolder';\r\n\r\nexport default class BuyAnimalFoodList extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={list:[],LastTake:0,LastSkip:0};\r\n        \r\n\r\n\r\n    }\r\n\r\n    readAndSet(LastTake,LastSkip){\r\n      this.readAnimalFoodList(LastTake,LastSkip)\r\n      .then((res) => {\r\n        if (res.Status == 1) {\r\n          //success\r\n          this.setState({ list: res.EntityList,Total: res.Total ,\r\n            LastTake: res.LastTake,LastSkip: res.LastSkip});\r\n\r\n        } else {\r\n          alert(res.Message);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n        alert(\"خطایی رخ داد\");\r\n      });\r\n    }\r\n  componentWillMount() {\r\n    this.readAndSet(this.state.LastTake,this.state.LastSkip);\r\n  }\r\n\r\n  pagingCallback(take,skip){\r\n\r\n    this.setState({LastSkip:skip,LastTake:take});\r\n    debugger;\r\n    this.readAndSet(take,skip);\r\n  }\r\n\r\n  readAnimalFoodList(LastTake,LastSkip) {\r\n    let  animalFoodId  = DataHolder.selectedAnimalFood ? DataHolder.selectedAnimalFood.Id : null;\r\n\r\n\r\n    debugger;\r\n    let s = new AnimalFoodBuyService();\r\n    return s.getAll( animalFoodId,LastTake,LastSkip);\r\n  }\r\n  render() {\r\n    return ( \r\n      <div>\r\n      <h3 style={globalStylesheet.center}> لیست خرید ها</h3>\r\n          {DataHolder.selectedAnimalFood && DataHolder.selectedAnimalFood.Name &&\r\n          <h4 style={{textAlign:'right'}}>نهاده انتخاب شده : {DataHolder.selectedAnimalFood.Name}</h4>}\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n              <tr>\r\n                  <th>ردیف</th>\r\n                  <th>نوع نهاده</th>\r\n                  <th>قیمت هر کیلو</th>\r\n                  <th>مقدار(کیلوگرم)</th>\r\n                  <th>مبلغ کل</th>\r\n                  <th>شماره فیش</th>\r\n                  <th>توضیحات</th>\r\n                  <th>تاریخ ثبت خرید</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.list &&\r\n              this.state.list.map((val, i, arr) => {\r\n                return <tr>\r\n                <td>{i+1}</td>\r\n                    <td>{val.AnimalFood.Name}</td>\r\n                    <td>{numberWithCommas(val.AnimalFood.PerUnitPrice)} ریال</td>\r\n                    <td>{val.Quan}</td>\r\n                    <td>{numberWithCommas(val.TotalPrice)} ریال</td>\r\n                    <td>{val.Fish}</td>\r\n                    <td>{val.Description}</td>\r\n                    <td>{val.DateTimeIR}</td>\r\n                </tr>;\r\n              })}\r\n\r\n              <tr>\r\n              <td colSpan=\"66\">\r\n             \r\n              {pagingComponent( this.state.Total,this.state.LastTake,this.state.LastSkip,this,'pagingCallback')}\r\n             \r\n              \r\n              </td>\r\n\r\n              </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <pupuHiComponent/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n\r\n\r\nexport default class pupuHiComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h3>hi</h3>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport {DataHolder} from \"../service/DateHolder\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {numberWithCommas} from \"../service/Models\";\r\nconst persianNToText = require('number-to-persian-text');\r\n\r\nclass PrintIssueAssignment extends Component {\r\n\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state={};  \r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.setState({stylePath:'assets/printIssueAssignment.css'})\r\n        if (DataHolder.selectedIssueAssignment.Id) {\r\n\r\n           setTimeout(()=>{\r\n               window.print();\r\n           },3000)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(DataHolder.selectedIssueAssignment)\r\n\r\n        if (!DataHolder.selectedIssueAssignment.Id){\r\n            return <>\r\n                <h3>برای پرینت ابتدا باید حواله ای انتخاب نمایید</h3>\r\n\r\n                <Route render={({ history}) => (\r\n                    <button\r\n                        type='button'\r\n                        className=\"btn btn-info\"\r\n                        style={{direction:'rtl'}}\r\n\r\n                        data-testid=\"IssueAssignmentList\"\r\n                        onClick={() => { history.push('/IssueAssignmentList') }}\r\n                    >\r\n                       لیست حواله ها\r\n                    </button>\r\n                )} />\r\n            </>;\r\n        }\r\n        \r\n        return (\r\n            <div style={{paddingTop:'20px',paddingRight:'100px'\r\n                ,paddingLeft:'100px'}}>\r\n                {this.renderPrintSingle()}\r\n                {this.renderPrintSingle()}\r\n                {this.renderPrintSingle()}\r\n                </div>\r\n           \r\n        );\r\n    }\r\n    \r\n    \r\n    renderPrintSingle(){\r\n        return ( <div >\r\n            <link rel=\"stylesheet\" type=\"text/css\" href={this.state.stylePath} />\r\n\r\n            <table className='sheet table table-bordered'  style={{width:\"100%\",margin:'0px'}} dir=\"rtl\">\r\n                <tbody>\r\n                <tr>\r\n                    <td colSpan=\"99\" >\r\n                        <p><strong>باسمه تعالی</strong></p>\r\n                    </td>\r\n\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan=\"2\" style={{width:\"80\"}}>\r\n                        <p><strong>شرکت تعاونی تامین نیاز دامداران خسروشاه و حومه</strong></p>\r\n                    </td>\r\n                    <td style={{width:\"19\"}}>\r\n                        <p>شماره قبض: {DataHolder.selectedIssueAssignment.Id}  </p>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"thRight\"  style={{width:\"65\"}}>\r\n                        <p><strong>حواله انبار &gt;&gt; نمایندگی :</strong>  فکوری </p>\r\n                    </td>\r\n                    <td style={{width:\"14\"}}>\r\n                        <p>تاریخ :</p>\r\n                    </td>\r\n                    <td style={{width:\"19\"}}>\r\n                        <p>{DataHolder.selectedIssueAssignment.DateTimeIR}</p>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td style={{width:\"65\"}}>\r\n                        <p><strong>کالای مشروحه ذیل توسط شرکت تعاونی نیاز دامداران خسروشاه و حومه</strong></p>\r\n                    </td>\r\n                    <td  style={{width:\"14\"}}>\r\n                        <p>طی فیش:</p>\r\n                    </td>\r\n                    <td style={{width:\"19\"}}>\r\n                        <p>{DataHolder.selectedIssueAssignment.BankFish}</p>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td style={{width:\"65\"}} className=\"thRight\" >\r\n                        <p>   به آقای:   {DataHolder.selectedIssueAssignment.Person.Name} {DataHolder.selectedIssueAssignment.Person.NamVaNameKhanevadegi}</p>\r\n                    </td>\r\n                    <td style={{width:\"14\"}}>\r\n                        <p>عضو شماره : {DataHolder.selectedIssueAssignment.PersonId}</p>\r\n                    </td>\r\n                    <td style={{width:\"19\"}}>\r\n                        <p>تحویل گردید% تلفن : 04132445040</p>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan=\"3\" style={{width:\"100\"}}>\r\n                        <table  style={{width:\"100%\"}} dir=\"rtl\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td style={{width:\"4\"}}>\r\n                                    <p>ردیف</p>\r\n                                </td>\r\n                                <td style={{width:\"42\"}}>\r\n                                    <p><strong>شرح</strong></p>\r\n                                </td>\r\n                                <td colSpan=\"2\" style={{width:\"15\"}}>\r\n                                    <p><strong>مقدار یا تعداد</strong></p>\r\n                                </td>\r\n                                <td style={{width:\"17\"}}>\r\n                                    <p><strong>بهاء واحد</strong></p>\r\n                                </td>\r\n                                <td style={{width:\"16\"}}>\r\n                                    <p><strong>بهاء کل</strong></p>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{width:\"4\"}}>\r\n                                    <p>1</p>\r\n                                </td>\r\n                                <td style={{width:\"42\"}}>\r\n                                    <p>{DataHolder.selectedIssueAssignment.Description}</p>\r\n                                </td>\r\n                                <td colSpan=\"2\" style={{width:\"15\"}}>\r\n                                    <p>   {DataHolder.selectedIssueAssignment.Quan}   کیلوگرم   </p>\r\n                                </td>\r\n                                <td style={{width:\"17\"}}>\r\n                                    <p>   {numberWithCommas(DataHolder.selectedIssueAssignment.AnimalFood.PerUnitPrice)}  ریال  </p>\r\n                                </td>\r\n                                <td style={{width:\"16\"}}>\r\n                                    <p>  {numberWithCommas(DataHolder.selectedIssueAssignment.TotalPrice)}   ریال   </p>\r\n                                </td>\r\n                            </tr>\r\n                         {/*   <tr>\r\n                                <td style={{width:\"4\"}}>\r\n                                    <p>2</p>\r\n                                </td>\r\n                                <td style={{width:\"42\"}}>\r\n                                    <p>&nbsp;</p>\r\n                                </td>\r\n                                <td colSpan=\"2\" style={{width:\"15\"}}>\r\n                                    <p>&nbsp;</p>\r\n                                </td>\r\n                                <td style={{width:\"17\"}}>\r\n                                    <p>&nbsp;</p>\r\n                                </td>\r\n                                <td style={{width:\"16\"}}>\r\n                                    <p>&nbsp;</p>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{width:\"4\"}}>\r\n                                    <p>3</p>\r\n                                </td>\r\n                                <td style={{width:\"42\"}}>\r\n                                    <p>&nbsp;</p>\r\n                                </td>\r\n                                <td colSpan=\"2\" style={{width:\"15\"}}>\r\n                                    <p>&nbsp;</p>\r\n                                </td>\r\n                                <td style={{width:\"17\"}}>\r\n                                    <p>&nbsp;</p>\r\n                                </td>\r\n                                <td style={{width:\"16\"}}>\r\n                                    <p>&nbsp;</p>\r\n                                </td>\r\n                            </tr>*/}\r\n                            <tr>\r\n                                <td colSpan=\"99\" className=\"thRight\" style={{width:\"80\"}}>\r\n                                    <p><strong>جمع به حروف :</strong>\r\n\r\n                                        {persianNToText.getText(DataHolder.selectedIssueAssignment.TotalPrice)}   ریال </p>\r\n                                </td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan=\"4\" style={{width:\"51\"}}>\r\n                                    <p><strong>امضاء صاحب کالا:</strong></p>\r\n                                </td>\r\n                                <td colSpan=\"3\" style={{width:\"48\"}}>\r\n                                    <p><strong>مدیر عامل :</strong></p>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n           {/*  <p style={{width:'100%',borderBottom:'1px dotted black'}}>&nbsp;</p>\r\n */}\r\n <br/>\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default PrintIssueAssignment;\r\n\r\n\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LoginActions.Login:\r\n                this.login(this.getReturnUrl());\r\n                break;\r\n            case LoginActions.LoginCallback:\r\n                this.processLoginCallback();\r\n                break;\r\n            case LoginActions.LoginFailed:\r\n                const params = new URLSearchParams(window.location.search);\r\n                const error = params.get(QueryParameterNames.Message);\r\n                this.setState({ message: error });\r\n                break;\r\n            case LoginActions.Profile:\r\n                this.redirectToProfile();\r\n                break;\r\n            case LoginActions.Register:\r\n                this.redirectToRegister();\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const action = this.props.action;\r\n        const { message } = this.state;\r\n\r\n        if (!!message) {\r\n            return <div>{message}</div>\r\n        } else {\r\n            switch (action) {\r\n                case LoginActions.Login:\r\n                    return (<div>Processing login</div>);\r\n                case LoginActions.LoginCallback:\r\n                    return (<div>Processing login callback</div>);\r\n                case LoginActions.Profile:\r\n                case LoginActions.Register:\r\n                    return (<div></div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async login(returnUrl) {\r\n        const state = { returnUrl };\r\n        const result = await authService.signIn(state);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                break;\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(returnUrl);\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid status result ${result.status}.`);\r\n        }\r\n    }\r\n\r\n    async processLoginCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignIn(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeSignIn finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid authentication result status '${result.status}'.`);\r\n        }\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) || fromQuery || `${window.location.origin}/`;\r\n    }\r\n\r\n    redirectToRegister() {\r\n        this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?${QueryParameterNames.ReturnUrl}=${encodeURI(ApplicationPaths.Login)}`);\r\n    }\r\n\r\n    redirectToProfile() {\r\n        this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n    }\r\n\r\n    redirectToApiAuthorizationPath(apiAuthorizationPath) {\r\n        const redirectUrl = `${window.location.origin}${apiAuthorizationPath}`;\r\n        // It's important that we do a replace here so that when the user hits the back arrow on the\r\n        // browser he gets sent back to where it was on the app instead of to an endpoint on this\r\n        // component.\r\n        window.location.replace(redirectUrl);\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        // It's important that we do a replace here so that we remove the callback uri with the\r\n        // fragment containing the tokens from the browser history.\r\n        window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { QueryParameterNames, LogoutActions, ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\nexport class Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined,\r\n            isReady: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LogoutActions.Logout:\r\n                this.logout(this.getReturnUrl());\r\n\r\n                /* if (!!window.history.state.local) {\r\n                 } else {\r\n                     // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n                     this.setState({ isReady: true, message: \"The logout was not initiated from within the page.\" });\r\n                 }*/\r\n                break;\r\n            case LogoutActions.LogoutCallback:\r\n                this.processLogoutCallback();\r\n                break;\r\n            case LogoutActions.LoggedOut:\r\n                this.setState({ isReady: true, message: \"با موفقیت از سیستم خارج شدید\" });\r\n                \r\n                setTimeout(()=>{\r\n                    window.location='/';\r\n                    \r\n                },1000)\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    render() {\r\n        const { isReady, message } = this.state;\r\n        if (!isReady) {\r\n            return <div></div>\r\n        }\r\n        if (!!message) {\r\n            return (<div>{message}</div>);\r\n        } else {\r\n            const action = this.props.action;\r\n            switch (action) {\r\n                case LogoutActions.Logout:\r\n                    return (<div>در حال خروج از سیستم</div>);\r\n                case LogoutActions.LogoutCallback:\r\n                    return (<div>Processing logout callback</div>);\r\n                case LogoutActions.LoggedOut:\r\n                    return (<div>{message}</div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(returnUrl) {\r\n        const state = { returnUrl };\r\n        const isauthenticated = await authService.isAuthenticated();\r\n        if (isauthenticated) {\r\n            const result = await authService.signOut(state);\r\n            switch (result.status) {\r\n                case AuthenticationResultStatus.Redirect:\r\n                    break;\r\n                case AuthenticationResultStatus.Success:\r\n                    await this.navigateToReturnUrl(returnUrl);\r\n                    break;\r\n                case AuthenticationResultStatus.Fail:\r\n                    this.setState({ message: result.message });\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Invalid authentication result status.\");\r\n            }\r\n        } else {\r\n            this.setState({ message: \"با موفقیت از سیستم خارج شدید !\" });\r\n            \r\n            /*setTimeout(()=>{\r\n                window.location.reload();\r\n            },1000)*/\r\n        }\r\n    }\r\n\r\n    async processLogoutCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignOut(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeAuthentication finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid authentication result status.\");\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ isReady: true, authenticated });\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            `${window.location.origin}${ApplicationPaths.LoggedOut}`;\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        return window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Login } from './Login'\r\nimport { Logout } from './Logout'\r\nimport { ApplicationPaths, LoginActions, LogoutActions } from './ApiAuthorizationConstants';\r\n\r\nexport default class ApiAuthorizationRoutes extends Component {\r\n\r\n  render () {\r\n    return(\r\n      <Fragment>\r\n          <Route path={ApplicationPaths.Login} render={() => loginAction(LoginActions.Login)} />\r\n          <Route path={ApplicationPaths.LoginFailed} render={() => loginAction(LoginActions.LoginFailed)} />\r\n          <Route path={ApplicationPaths.LoginCallback} render={() => loginAction(LoginActions.LoginCallback)} />\r\n          <Route path={ApplicationPaths.Profile} render={() => loginAction(LoginActions.Profile)} />\r\n          <Route path={ApplicationPaths.Register} render={() => loginAction(LoginActions.Register)} />\r\n          <Route path={ApplicationPaths.LogOut} render={() => logoutAction(LogoutActions.Logout)} />\r\n          <Route path={ApplicationPaths.LogOutCallback} render={() => logoutAction(LogoutActions.LogoutCallback)} />\r\n          <Route path={ApplicationPaths.LoggedOut} render={() => logoutAction(LogoutActions.LoggedOut)} />\r\n      </Fragment>);\r\n  }\r\n}\r\n\r\nfunction loginAction(name){\r\n    return (<Login action={name}></Login>);\r\n}\r\n\r\nfunction logoutAction(name) {\r\n    return (<Logout action={name}></Logout>);\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { ApplicationPaths, QueryParameterNames } from './ApiAuthorizationConstants'\r\nimport authService from './AuthorizeService'\r\n\r\nexport default class AuthorizeRoute extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ready: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.authenticationChanged());\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    render() {\r\n        const { ready, authenticated } = this.state;\r\n        var link = document.createElement(\"a\");\r\n        link.href = this.props.path;\r\n        const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\r\n        const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURI(returnUrl)}`\r\n        if (!ready) {\r\n            return <div></div>;\r\n        } else {\r\n            const { component: Component, ...rest } = this.props;\r\n            return <Route {...rest}\r\n                render={(props) => {\r\n                    if (authenticated) {\r\n                        return <Component {...props} />\r\n                    } else {\r\n                        return <Redirect to={redirectUrl} />\r\n                    }\r\n                }} />\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ ready: true, authenticated });\r\n    }\r\n\r\n    async authenticationChanged() {\r\n        this.setState({ ready: false, authenticated: false });\r\n        await this.populateAuthenticationState();\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\n\r\nimport './custom.css'\r\nimport SettingPage from './Pages/SettingPage';\r\nimport AnimalFoodPage from './Pages/AnimalFoodPage';\r\nimport IssueAssignment from './Pages/IssueAssignment/IssueAssignment';\r\nimport InventoryIn from './Pages/InventoryIn/InventoryIn';\r\nimport BuyAnimalFood from './Pages/BuyAnimalFood/BuyAnimalFood';\r\nimport InventoryStatus from './Pages/InventoryStatus/InventoryStatus';\r\nimport IssueAssignmentList from './Pages/IssueAssignmentList';\r\nimport BuyAnimalFoodList from './Pages/BuyAnimalFoodList';\r\nimport { pagingComponent } from './Pages/paging';\r\nimport PrintIssueAssignment from \"./Pages/printIssueAssignment\";\r\nimport ApiAuthorizationRoutes from \"./components/api-authorization/ApiAuthorizationRoutes\";\r\nimport AuthorizeRoute from \"./components/api-authorization/AuthorizeRoute\";\r\nimport {ApplicationPaths} from \"./components/api-authorization/ApiAuthorizationConstants\";\r\n\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <AuthorizeRoute exact path='/' component={Home} />\r\n        <AuthorizeRoute path='/setting' component={SettingPage} />\r\n        <AuthorizeRoute path='/AnimalFoodPage' component={AnimalFoodPage} />\r\n        <AuthorizeRoute path='/InventoryIn' component={InventoryIn} />\r\n        <AuthorizeRoute path='/BuyAnimalFood' component={BuyAnimalFood} />\r\n        <AuthorizeRoute path='/IssueAssignment' component={IssueAssignment} />\r\n        <AuthorizeRoute path='/IssueAssignmentList' component={IssueAssignmentList} />\r\n        <AuthorizeRoute path='/BuyAnimalFoodList' component={BuyAnimalFoodList} />\r\n        <AuthorizeRoute path='/InventoryStatus' component={InventoryStatus} />\r\n          <AuthorizeRoute path='/pagingComponent' component={pagingComponent} />\r\n          <AuthorizeRoute path='/PrintIssueAssignment' component={PrintIssueAssignment} />\r\n\r\n              <Route path={ApplicationPaths.ApiAuthorizationPrefix} component={ApiAuthorizationRoutes} />\r\n      </Layout>\r\n    );\r\n  }\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}